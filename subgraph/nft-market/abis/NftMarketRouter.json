{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "BuyNft",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "Cancel",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "PriceChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "SellNft",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endIdx",
          "type": "uint256"
        }
      ],
      "name": "bulkGetOrders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sellTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextUpdateTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct NftMarket.TokenMeta[]",
          "name": "ret",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "buyItem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "changePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pageIdx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pageSize",
          "type": "uint256"
        }
      ],
      "name": "getOrderPage",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sellTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextUpdateTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct NftMarket.TokenMeta[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "sellItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/yujian/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.4.0/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
    "1": "/Users/yujian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/access/Ownable.sol",
    "10": "/Users/yujian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/IERC721.sol",
    "12": "/Users/yujian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Context.sol",
    "15": "/Users/yujian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/introspection/IERC165.sol",
    "16": "/Users/yujian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/math/SafeMath.sol",
    "2": "/Users/yujian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/security/ReentrancyGuard.sol",
    "23": "contracts/NftMarket.sol",
    "24": "contracts/NftMarketFactory.sol",
    "25": "contracts/NftMarketRouter.sol",
    "26": "contracts/TransferHelper.sol"
  },
  "ast": {
    "absolutePath": "contracts/NftMarketRouter.sol",
    "exportedSymbols": {
      "Context": [
        5258
      ],
      "IERC165": [
        5793
      ],
      "IERC721": [
        4923
      ],
      "IERC721ReceiverUpgradeable": [
        4767
      ],
      "NftMarket": [
        2175
      ],
      "NftMarketFactory": [
        2302
      ],
      "NftMarketRouter": [
        2728
      ],
      "Ownable": [
        3187
      ],
      "ReentrancyGuard": [
        4807
      ],
      "SafeMath": [
        5235
      ],
      "TransferHelper": [
        2888
      ]
    },
    "id": 2729,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2304,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "65:23:25"
      },
      {
        "absolutePath": "/Users/yujian/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.4.0/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "file": "@oz-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "id": 2305,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2729,
        "sourceUnit": 4768,
        "src": "90:69:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/yujian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 2306,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2729,
        "sourceUnit": 4924,
        "src": "160:58:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/NftMarket.sol",
        "file": "./NftMarket.sol",
        "id": 2307,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2729,
        "sourceUnit": 2176,
        "src": "219:25:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/NftMarketFactory.sol",
        "file": "./NftMarketFactory.sol",
        "id": 2308,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2729,
        "sourceUnit": 2303,
        "src": "245:32:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2309,
              "name": "IERC721ReceiverUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4767,
              "src": "307:26:25"
            },
            "id": 2310,
            "nodeType": "InheritanceSpecifier",
            "src": "307:26:25"
          }
        ],
        "canonicalName": "NftMarketRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2728,
        "linearizedBaseContracts": [
          2728,
          4767
        ],
        "name": "NftMarketRouter",
        "nameLocation": "288:15:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c45a0155",
            "id": 2312,
            "mutability": "immutable",
            "name": "factory",
            "nameLocation": "365:7:25",
            "nodeType": "VariableDeclaration",
            "scope": 2728,
            "src": "340:32:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2311,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "340:7:25",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2321,
              "nodeType": "Block",
              "src": "409:35:25",
              "statements": [
                {
                  "expression": {
                    "id": 2319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2317,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2312,
                      "src": "419:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2318,
                      "name": "_factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2314,
                      "src": "429:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "419:18:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2320,
                  "nodeType": "ExpressionStatement",
                  "src": "419:18:25"
                }
              ]
            },
            "id": 2322,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2314,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "399:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2322,
                  "src": "391:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "390:18:25"
            },
            "returnParameters": {
              "id": 2316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "409:0:25"
            },
            "scope": 2728,
            "src": "379:65:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2332,
            "name": "SellNft",
            "nameLocation": "456:7:25",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2324,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "472:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2332,
                  "src": "464:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2326,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "493:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2332,
                  "src": "485:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2328,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "511:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2332,
                  "src": "503:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2330,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "527:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2332,
                  "src": "519:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:71:25"
            },
            "src": "450:85:25"
          },
          {
            "anonymous": false,
            "id": 2342,
            "name": "PriceChange",
            "nameLocation": "546:11:25",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2334,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "566:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2342,
                  "src": "558:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2336,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "587:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2342,
                  "src": "579:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2338,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "605:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2342,
                  "src": "597:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2340,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newPrice",
                  "nameLocation": "621:9:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2342,
                  "src": "613:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "557:74:25"
            },
            "src": "540:92:25"
          },
          {
            "anonymous": false,
            "id": 2350,
            "name": "Cancel",
            "nameLocation": "643:6:25",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2344,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "658:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2350,
                  "src": "650:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "650:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2346,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "679:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2350,
                  "src": "671:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2348,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "697:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2350,
                  "src": "689:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "649:55:25"
            },
            "src": "637:68:25"
          },
          {
            "anonymous": false,
            "id": 2362,
            "name": "BuyNft",
            "nameLocation": "716:6:25",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2352,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "731:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2362,
                  "src": "723:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2354,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "752:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2362,
                  "src": "744:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2356,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "770:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2362,
                  "src": "762:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2358,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "786:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2362,
                  "src": "778:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2360,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "801:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2362,
                  "src": "793:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "722:86:25"
            },
            "src": "710:99:25"
          },
          {
            "body": {
              "id": 2440,
              "nodeType": "Block",
              "src": "927:503:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2372,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2368,
                          "src": "945:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "954:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "945:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a70726963652077726f6e67",
                        "id": 2375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "957:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a239341ded9911b975f75091bc425073cdd0825026e7c54c11d2b573192cb73",
                          "typeString": "literal_string \"Router:price wrong\""
                        },
                        "value": "Router:price wrong"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a239341ded9911b975f75091bc425073cdd0825026e7c54c11d2b573192cb73",
                          "typeString": "literal_string \"Router:price wrong\""
                        }
                      ],
                      "id": 2371,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "937:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "937:41:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2377,
                  "nodeType": "ExpressionStatement",
                  "src": "937:41:25"
                },
                {
                  "assignments": [
                    2379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2379,
                      "mutability": "mutable",
                      "name": "_pair",
                      "nameLocation": "996:5:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 2440,
                      "src": "988:13:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2378,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "988:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2386,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2384,
                        "name": "_collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2364,
                        "src": "1038:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2381,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2312,
                            "src": "1021:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2380,
                          "name": "NftMarketFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2302,
                          "src": "1004:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NftMarketFactory_$2302_$",
                            "typeString": "type(contract NftMarketFactory)"
                          }
                        },
                        "id": 2382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1004:25:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarketFactory_$2302",
                          "typeString": "contract NftMarketFactory"
                        }
                      },
                      "id": 2383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2185,
                      "src": "1004:33:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 2385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1004:46:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "988:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2388,
                          "name": "_pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2379,
                          "src": "1068:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1085:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1077:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2389,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1077:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1077:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1068:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a636f6c6c656374696f6e206d61726b6574206e6f74206578697374",
                        "id": 2394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1089:36:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2b0c06b0a476a211babefc775d189155f85380dfdd756fdf6bcdca420c3bb0d",
                          "typeString": "literal_string \"Router:collection market not exist\""
                        },
                        "value": "Router:collection market not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2b0c06b0a476a211babefc775d189155f85380dfdd756fdf6bcdca420c3bb0d",
                          "typeString": "literal_string \"Router:collection market not exist\""
                        }
                      ],
                      "id": 2387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1060:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1060:66:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2396,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:66:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2401,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1174:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1174:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2405,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1194:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftMarketRouter_$2728",
                              "typeString": "contract NftMarketRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftMarketRouter_$2728",
                              "typeString": "contract NftMarketRouter"
                            }
                          ],
                          "id": 2404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1186:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2403,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1186:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1186:13:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2407,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2366,
                        "src": "1201:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2398,
                            "name": "_collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2364,
                            "src": "1144:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2397,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4923,
                          "src": "1136:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$4923_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 2399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1136:20:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$4923",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 2400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4866,
                      "src": "1136:37:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:74:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2409,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:74:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2416,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1262:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftMarketRouter_$2728",
                              "typeString": "contract NftMarketRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftMarketRouter_$2728",
                              "typeString": "contract NftMarketRouter"
                            }
                          ],
                          "id": 2415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1254:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2414,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1254:7:25",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1254:13:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2418,
                        "name": "_pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2379,
                        "src": "1269:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2419,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2366,
                        "src": "1276:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2411,
                            "name": "_collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2364,
                            "src": "1228:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2410,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4923,
                          "src": "1220:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$4923_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 2412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1220:20:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$4923",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 2413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4876,
                      "src": "1220:33:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:65:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2421,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:65:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2426,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1329:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1329:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2428,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2366,
                        "src": "1341:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2429,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "1351:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2423,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2379,
                            "src": "1305:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2422,
                          "name": "NftMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2175,
                          "src": "1295:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NftMarket_$2175_$",
                            "typeString": "type(contract NftMarket)"
                          }
                        },
                        "id": 2424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1295:16:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarket_$2175",
                          "typeString": "contract NftMarket"
                        }
                      },
                      "id": 2425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellItemByRouter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1638,
                      "src": "1295:33:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 2430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1295:63:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2431,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:63:25"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2433,
                        "name": "_collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2364,
                        "src": "1381:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2434,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2366,
                        "src": "1394:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2435,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1404:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1404:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2437,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "1416:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2432,
                      "name": "SellNft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2332,
                      "src": "1373:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 2438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1373:50:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2439,
                  "nodeType": "EmitStatement",
                  "src": "1368:55:25"
                }
              ]
            },
            "functionSelector": "68915327",
            "id": 2441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellItem",
            "nameLocation": "824:8:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2364,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "850:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2441,
                  "src": "842:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2366,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "879:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2441,
                  "src": "871:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "871:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2368,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "905:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2441,
                  "src": "897:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "832:85:25"
            },
            "returnParameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "927:0:25"
            },
            "scope": 2728,
            "src": "815:615:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2508,
              "nodeType": "Block",
              "src": "1509:463:25",
              "statements": [
                {
                  "assignments": [
                    2449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2449,
                      "mutability": "mutable",
                      "name": "_pair",
                      "nameLocation": "1527:5:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 2508,
                      "src": "1519:13:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2448,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1519:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2456,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2454,
                        "name": "_collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2443,
                        "src": "1569:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2451,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2312,
                            "src": "1552:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2450,
                          "name": "NftMarketFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2302,
                          "src": "1535:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NftMarketFactory_$2302_$",
                            "typeString": "type(contract NftMarketFactory)"
                          }
                        },
                        "id": 2452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1535:25:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarketFactory_$2302",
                          "typeString": "contract NftMarketFactory"
                        }
                      },
                      "id": 2453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2185,
                      "src": "1535:33:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 2455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:46:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1519:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2458,
                          "name": "_pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2449,
                          "src": "1599:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1616:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1608:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2459,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1608:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1608:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1599:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a636f6c6c656374696f6e206d61726b6574206e6f74206578697374",
                        "id": 2464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1620:36:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2b0c06b0a476a211babefc775d189155f85380dfdd756fdf6bcdca420c3bb0d",
                          "typeString": "literal_string \"Router:collection market not exist\""
                        },
                        "value": "Router:collection market not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2b0c06b0a476a211babefc775d189155f85380dfdd756fdf6bcdca420c3bb0d",
                          "typeString": "literal_string \"Router:collection market not exist\""
                        }
                      ],
                      "id": 2457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1591:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:66:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2466,
                  "nodeType": "ExpressionStatement",
                  "src": "1591:66:25"
                },
                {
                  "assignments": [
                    2469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2469,
                      "mutability": "mutable",
                      "name": "nftMarket",
                      "nameLocation": "1677:9:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 2508,
                      "src": "1667:19:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftMarket_$2175",
                        "typeString": "contract NftMarket"
                      },
                      "typeName": {
                        "id": 2468,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2467,
                          "name": "NftMarket",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2175,
                          "src": "1667:9:25"
                        },
                        "referencedDeclaration": 2175,
                        "src": "1667:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarket_$2175",
                          "typeString": "contract NftMarket"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2473,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2471,
                        "name": "_pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2449,
                        "src": "1699:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2470,
                      "name": "NftMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2175,
                      "src": "1689:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_NftMarket_$2175_$",
                        "typeString": "type(contract NftMarket)"
                      }
                    },
                    "id": 2472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1689:16:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftMarket_$2175",
                      "typeString": "contract NftMarket"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1667:38:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2477,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2445,
                                "src": "1743:8:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2475,
                                "name": "nftMarket",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2469,
                                "src": "1724:9:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NftMarket_$2175",
                                  "typeString": "contract NftMarket"
                                }
                              },
                              "id": 2476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getOrder",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2062,
                              "src": "1724:18:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_TokenMeta_$1481_memory_ptr_$",
                                "typeString": "function (uint256) view external returns (struct NftMarket.TokenMeta memory)"
                              }
                            },
                            "id": 2478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1724:28:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenMeta_$1481_memory_ptr",
                              "typeString": "struct NftMarket.TokenMeta memory"
                            }
                          },
                          "id": 2479,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1476,
                          "src": "1724:34:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2480,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1762:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1762:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1724:47:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a2076616c75652069732077726f6e67",
                        "id": 2483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1773:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1841493aa410a2b0d9f20aaa55143ac5fdd5ac03cb466b1142f724342988c8c6",
                          "typeString": "literal_string \"Router: value is wrong\""
                        },
                        "value": "Router: value is wrong"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1841493aa410a2b0d9f20aaa55143ac5fdd5ac03cb466b1142f724342988c8c6",
                          "typeString": "literal_string \"Router: value is wrong\""
                        }
                      ],
                      "id": 2474,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1716:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1716:82:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2485,
                  "nodeType": "ExpressionStatement",
                  "src": "1716:82:25"
                },
                {
                  "assignments": [
                    2487
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2487,
                      "mutability": "mutable",
                      "name": "seller",
                      "nameLocation": "1816:6:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 2508,
                      "src": "1808:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2486,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1808:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2497,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2493,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1869:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1869:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2495,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2445,
                        "src": "1881:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2488,
                          "name": "nftMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2469,
                          "src": "1825:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NftMarket_$2175",
                            "typeString": "contract NftMarket"
                          }
                        },
                        "id": 2489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyItemByRouter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1791,
                        "src": "1825:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (address,uint256) payable external returns (address)"
                        }
                      },
                      "id": 2492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 2490,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1858:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1858:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1825:43:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$_t_address_$value",
                        "typeString": "function (address,uint256) payable external returns (address)"
                      }
                    },
                    "id": 2496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1825:65:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1808:82:25"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2499,
                        "name": "_collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2443,
                        "src": "1912:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2500,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2445,
                        "src": "1925:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2501,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2487,
                        "src": "1935:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2502,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1943:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1943:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2504,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1955:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1955:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2498,
                      "name": "BuyNft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2362,
                      "src": "1905:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,address,uint256)"
                      }
                    },
                    "id": 2506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1905:60:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2507,
                  "nodeType": "EmitStatement",
                  "src": "1900:65:25"
                }
              ]
            },
            "functionSelector": "9f37092a",
            "id": 2509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyItem",
            "nameLocation": "1445:7:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2443,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "1461:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "1453:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1453:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2445,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1482:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "1474:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1452:39:25"
            },
            "returnParameters": {
              "id": 2447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1509:0:25"
            },
            "scope": 2728,
            "src": "1436:536:25",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2566,
              "nodeType": "Block",
              "src": "2046:388:25",
              "statements": [
                {
                  "assignments": [
                    2517
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2517,
                      "mutability": "mutable",
                      "name": "_pair",
                      "nameLocation": "2064:5:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 2566,
                      "src": "2056:13:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2516,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2056:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2524,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2522,
                        "name": "_collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2511,
                        "src": "2106:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2519,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2312,
                            "src": "2089:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2518,
                          "name": "NftMarketFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2302,
                          "src": "2072:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NftMarketFactory_$2302_$",
                            "typeString": "type(contract NftMarketFactory)"
                          }
                        },
                        "id": 2520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2072:25:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarketFactory_$2302",
                          "typeString": "contract NftMarketFactory"
                        }
                      },
                      "id": 2521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2185,
                      "src": "2072:33:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 2523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2072:46:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2056:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2526,
                          "name": "_pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2517,
                          "src": "2136:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2153:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2145:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2527,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2145:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2145:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2136:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a636f6c6c656374696f6e206d61726b6574206e6f74206578697374",
                        "id": 2532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2157:36:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2b0c06b0a476a211babefc775d189155f85380dfdd756fdf6bcdca420c3bb0d",
                          "typeString": "literal_string \"Router:collection market not exist\""
                        },
                        "value": "Router:collection market not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2b0c06b0a476a211babefc775d189155f85380dfdd756fdf6bcdca420c3bb0d",
                          "typeString": "literal_string \"Router:collection market not exist\""
                        }
                      ],
                      "id": 2525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2128:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2128:66:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2534,
                  "nodeType": "ExpressionStatement",
                  "src": "2128:66:25"
                },
                {
                  "assignments": [
                    2537
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2537,
                      "mutability": "mutable",
                      "name": "nftMarket",
                      "nameLocation": "2214:9:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 2566,
                      "src": "2204:19:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftMarket_$2175",
                        "typeString": "contract NftMarket"
                      },
                      "typeName": {
                        "id": 2536,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2535,
                          "name": "NftMarket",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2175,
                          "src": "2204:9:25"
                        },
                        "referencedDeclaration": 2175,
                        "src": "2204:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarket_$2175",
                          "typeString": "contract NftMarket"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2541,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2539,
                        "name": "_pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2517,
                        "src": "2236:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2538,
                      "name": "NftMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2175,
                      "src": "2226:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_NftMarket_$2175_$",
                        "typeString": "type(contract NftMarket)"
                      }
                    },
                    "id": 2540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2226:16:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftMarket_$2175",
                      "typeString": "contract NftMarket"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2204:38:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2545,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2513,
                              "src": "2279:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2543,
                              "name": "nftMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2537,
                              "src": "2260:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NftMarket_$2175",
                                "typeString": "contract NftMarket"
                              }
                            },
                            "id": 2544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2043,
                            "src": "2260:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 2546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2260:28:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2547,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2292:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2292:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2260:42:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a6e6f74206f776e6572",
                        "id": 2550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2304:18:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7e14dd7bdbb94baec26c52c244d361952cb310fdbd69e4a1d5d56a164cf0e9a",
                          "typeString": "literal_string \"Router:not owner\""
                        },
                        "value": "Router:not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7e14dd7bdbb94baec26c52c244d361952cb310fdbd69e4a1d5d56a164cf0e9a",
                          "typeString": "literal_string \"Router:not owner\""
                        }
                      ],
                      "id": 2542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2252:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2252:71:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2552,
                  "nodeType": "ExpressionStatement",
                  "src": "2252:71:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2556,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2513,
                        "src": "2362:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2553,
                        "name": "nftMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2537,
                        "src": "2333:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarket_$2175",
                          "typeString": "contract NftMarket"
                        }
                      },
                      "id": 2555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cancelItemByRouter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1877,
                      "src": "2333:28:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2333:38:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2558,
                  "nodeType": "ExpressionStatement",
                  "src": "2333:38:25"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2560,
                        "name": "_collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2511,
                        "src": "2393:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2561,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2513,
                        "src": "2406:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2562,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2416:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2416:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2559,
                      "name": "Cancel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2350,
                      "src": "2386:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 2564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2386:41:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2565,
                  "nodeType": "EmitStatement",
                  "src": "2381:46:25"
                }
              ]
            },
            "functionSelector": "8f6d40d2",
            "id": 2567,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelItem",
            "nameLocation": "1987:10:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2511,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "2006:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2567,
                  "src": "1998:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1998:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2513,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2027:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2567,
                  "src": "2019:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1997:39:25"
            },
            "returnParameters": {
              "id": 2515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2046:0:25"
            },
            "scope": 2728,
            "src": "1978:456:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2635,
              "nodeType": "Block",
              "src": "2555:461:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2577,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2573,
                          "src": "2573:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2582:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2573:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a70726963652077726f6e67",
                        "id": 2580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2585:20:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a239341ded9911b975f75091bc425073cdd0825026e7c54c11d2b573192cb73",
                          "typeString": "literal_string \"Router:price wrong\""
                        },
                        "value": "Router:price wrong"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a239341ded9911b975f75091bc425073cdd0825026e7c54c11d2b573192cb73",
                          "typeString": "literal_string \"Router:price wrong\""
                        }
                      ],
                      "id": 2576,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2565:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2565:41:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2582,
                  "nodeType": "ExpressionStatement",
                  "src": "2565:41:25"
                },
                {
                  "assignments": [
                    2584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2584,
                      "mutability": "mutable",
                      "name": "_pair",
                      "nameLocation": "2624:5:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 2635,
                      "src": "2616:13:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2583,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2616:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2591,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2589,
                        "name": "_collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2569,
                        "src": "2666:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2586,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2312,
                            "src": "2649:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2585,
                          "name": "NftMarketFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2302,
                          "src": "2632:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NftMarketFactory_$2302_$",
                            "typeString": "type(contract NftMarketFactory)"
                          }
                        },
                        "id": 2587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2632:25:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarketFactory_$2302",
                          "typeString": "contract NftMarketFactory"
                        }
                      },
                      "id": 2588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2185,
                      "src": "2632:33:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 2590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2632:46:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2616:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2593,
                          "name": "_pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2584,
                          "src": "2696:5:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2713:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2705:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2594,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2705:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2705:10:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2696:19:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a636f6c6c656374696f6e206d61726b6574206e6f74206578697374",
                        "id": 2599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2717:36:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2b0c06b0a476a211babefc775d189155f85380dfdd756fdf6bcdca420c3bb0d",
                          "typeString": "literal_string \"Router:collection market not exist\""
                        },
                        "value": "Router:collection market not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2b0c06b0a476a211babefc775d189155f85380dfdd756fdf6bcdca420c3bb0d",
                          "typeString": "literal_string \"Router:collection market not exist\""
                        }
                      ],
                      "id": 2592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2688:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2688:66:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2601,
                  "nodeType": "ExpressionStatement",
                  "src": "2688:66:25"
                },
                {
                  "assignments": [
                    2604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2604,
                      "mutability": "mutable",
                      "name": "nftMarket",
                      "nameLocation": "2774:9:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 2635,
                      "src": "2764:19:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftMarket_$2175",
                        "typeString": "contract NftMarket"
                      },
                      "typeName": {
                        "id": 2603,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2602,
                          "name": "NftMarket",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2175,
                          "src": "2764:9:25"
                        },
                        "referencedDeclaration": 2175,
                        "src": "2764:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarket_$2175",
                          "typeString": "contract NftMarket"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2608,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2606,
                        "name": "_pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2584,
                        "src": "2796:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2605,
                      "name": "NftMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2175,
                      "src": "2786:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_NftMarket_$2175_$",
                        "typeString": "type(contract NftMarket)"
                      }
                    },
                    "id": 2607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2786:16:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftMarket_$2175",
                      "typeString": "contract NftMarket"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2764:38:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2612,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2571,
                              "src": "2839:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2610,
                              "name": "nftMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2604,
                              "src": "2820:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NftMarket_$2175",
                                "typeString": "contract NftMarket"
                              }
                            },
                            "id": 2611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2043,
                            "src": "2820:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 2613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2820:28:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2614,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2852:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2852:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2820:42:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a6e6f74206f776e6572",
                        "id": 2617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2864:18:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7e14dd7bdbb94baec26c52c244d361952cb310fdbd69e4a1d5d56a164cf0e9a",
                          "typeString": "literal_string \"Router:not owner\""
                        },
                        "value": "Router:not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7e14dd7bdbb94baec26c52c244d361952cb310fdbd69e4a1d5d56a164cf0e9a",
                          "typeString": "literal_string \"Router:not owner\""
                        }
                      ],
                      "id": 2609,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2812:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2812:71:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2619,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:71:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2623,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2571,
                        "src": "2923:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2624,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2573,
                        "src": "2933:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2620,
                        "name": "nftMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2604,
                        "src": "2893:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarket_$2175",
                          "typeString": "contract NftMarket"
                        }
                      },
                      "id": 2622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "changePriceByRouter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1968,
                      "src": "2893:29:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 2625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2893:47:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2626,
                  "nodeType": "ExpressionStatement",
                  "src": "2893:47:25"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2628,
                        "name": "_collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2569,
                        "src": "2967:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2629,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2571,
                        "src": "2980:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2630,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2990:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2990:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2632,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2573,
                        "src": "3002:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2627,
                      "name": "PriceChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2342,
                      "src": "2955:11:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 2633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2955:54:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2634,
                  "nodeType": "EmitStatement",
                  "src": "2950:59:25"
                }
              ]
            },
            "functionSelector": "741cbae4",
            "id": 2636,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changePrice",
            "nameLocation": "2449:11:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2569,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "2478:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2636,
                  "src": "2470:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2571,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2507:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2636,
                  "src": "2499:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2499:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2573,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "2533:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2636,
                  "src": "2525:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2460:85:25"
            },
            "returnParameters": {
              "id": 2575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2555:0:25"
            },
            "scope": 2728,
            "src": "2440:576:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2671,
              "nodeType": "Block",
              "src": "3181:185:25",
              "statements": [
                {
                  "assignments": [
                    2650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2650,
                      "mutability": "mutable",
                      "name": "_pair",
                      "nameLocation": "3199:5:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 2671,
                      "src": "3191:13:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2649,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3191:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2657,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2655,
                        "name": "_collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2638,
                        "src": "3241:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2652,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2312,
                            "src": "3224:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2651,
                          "name": "NftMarketFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2302,
                          "src": "3207:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NftMarketFactory_$2302_$",
                            "typeString": "type(contract NftMarketFactory)"
                          }
                        },
                        "id": 2653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3207:25:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarketFactory_$2302",
                          "typeString": "contract NftMarketFactory"
                        }
                      },
                      "id": 2654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2185,
                      "src": "3207:33:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 2656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3207:46:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3191:62:25"
                },
                {
                  "assignments": [
                    2660
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2660,
                      "mutability": "mutable",
                      "name": "nftMarket",
                      "nameLocation": "3273:9:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 2671,
                      "src": "3263:19:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftMarket_$2175",
                        "typeString": "contract NftMarket"
                      },
                      "typeName": {
                        "id": 2659,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2658,
                          "name": "NftMarket",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2175,
                          "src": "3263:9:25"
                        },
                        "referencedDeclaration": 2175,
                        "src": "3263:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarket_$2175",
                          "typeString": "contract NftMarket"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2664,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2662,
                        "name": "_pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2650,
                        "src": "3295:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2661,
                      "name": "NftMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2175,
                      "src": "3285:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_NftMarket_$2175_$",
                        "typeString": "type(contract NftMarket)"
                      }
                    },
                    "id": 2663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3285:16:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftMarket_$2175",
                      "typeString": "contract NftMarket"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3263:38:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2667,
                        "name": "pageIdx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2640,
                        "src": "3341:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2668,
                        "name": "pageSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2642,
                        "src": "3350:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2665,
                        "name": "nftMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2660,
                        "src": "3318:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarket_$2175",
                          "typeString": "contract NftMarket"
                        }
                      },
                      "id": 2666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getOrderPage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2110,
                      "src": "3318:22:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_TokenMeta_$1481_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256) view external returns (struct NftMarket.TokenMeta memory[] memory)"
                      }
                    },
                    "id": 2669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3318:41:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TokenMeta_$1481_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct NftMarket.TokenMeta memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2648,
                  "id": 2670,
                  "nodeType": "Return",
                  "src": "3311:48:25"
                }
              ]
            },
            "functionSelector": "6cde1ff8",
            "id": 2672,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderPage",
            "nameLocation": "3031:12:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2638,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "3061:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2672,
                  "src": "3053:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3053:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2640,
                  "mutability": "mutable",
                  "name": "pageIdx",
                  "nameLocation": "3090:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2672,
                  "src": "3082:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2642,
                  "mutability": "mutable",
                  "name": "pageSize",
                  "nameLocation": "3115:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2672,
                  "src": "3107:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3107:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3043:86:25"
            },
            "returnParameters": {
              "id": 2648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2647,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2672,
                  "src": "3151:28:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TokenMeta_$1481_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct NftMarket.TokenMeta[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2645,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2644,
                        "name": "NftMarket.TokenMeta",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1481,
                        "src": "3151:19:25"
                      },
                      "referencedDeclaration": 1481,
                      "src": "3151:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMeta_$1481_storage_ptr",
                        "typeString": "struct NftMarket.TokenMeta"
                      }
                    },
                    "id": 2646,
                    "nodeType": "ArrayTypeName",
                    "src": "3151:21:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TokenMeta_$1481_storage_$dyn_storage_ptr",
                      "typeString": "struct NftMarket.TokenMeta[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3150:30:25"
            },
            "scope": 2728,
            "src": "3022:344:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2707,
              "nodeType": "Block",
              "src": "3535:185:25",
              "statements": [
                {
                  "assignments": [
                    2686
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2686,
                      "mutability": "mutable",
                      "name": "_pair",
                      "nameLocation": "3553:5:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 2707,
                      "src": "3545:13:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2685,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3545:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2693,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2691,
                        "name": "_collection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2674,
                        "src": "3595:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2688,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2312,
                            "src": "3578:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2687,
                          "name": "NftMarketFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2302,
                          "src": "3561:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_NftMarketFactory_$2302_$",
                            "typeString": "type(contract NftMarketFactory)"
                          }
                        },
                        "id": 2689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3561:25:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarketFactory_$2302",
                          "typeString": "contract NftMarketFactory"
                        }
                      },
                      "id": 2690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2185,
                      "src": "3561:33:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 2692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3561:46:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3545:62:25"
                },
                {
                  "assignments": [
                    2696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2696,
                      "mutability": "mutable",
                      "name": "nftMarket",
                      "nameLocation": "3627:9:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 2707,
                      "src": "3617:19:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftMarket_$2175",
                        "typeString": "contract NftMarket"
                      },
                      "typeName": {
                        "id": 2695,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2694,
                          "name": "NftMarket",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2175,
                          "src": "3617:9:25"
                        },
                        "referencedDeclaration": 2175,
                        "src": "3617:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarket_$2175",
                          "typeString": "contract NftMarket"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2700,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2698,
                        "name": "_pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2686,
                        "src": "3649:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2697,
                      "name": "NftMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2175,
                      "src": "3639:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_NftMarket_$2175_$",
                        "typeString": "type(contract NftMarket)"
                      }
                    },
                    "id": 2699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3639:16:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftMarket_$2175",
                      "typeString": "contract NftMarket"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3617:38:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2703,
                        "name": "startIdx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2676,
                        "src": "3696:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2704,
                        "name": "endIdx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2678,
                        "src": "3706:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2701,
                        "name": "nftMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2696,
                        "src": "3672:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarket_$2175",
                          "typeString": "contract NftMarket"
                        }
                      },
                      "id": 2702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "bulkGetOrders",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2155,
                      "src": "3672:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_array$_t_struct$_TokenMeta_$1481_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256) view external returns (struct NftMarket.TokenMeta memory[] memory)"
                      }
                    },
                    "id": 2705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3672:41:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TokenMeta_$1481_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct NftMarket.TokenMeta memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2684,
                  "id": 2706,
                  "nodeType": "Return",
                  "src": "3665:48:25"
                }
              ]
            },
            "functionSelector": "602c93b7",
            "id": 2708,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bulkGetOrders",
            "nameLocation": "3381:13:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2674,
                  "mutability": "mutable",
                  "name": "_collection",
                  "nameLocation": "3412:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2708,
                  "src": "3404:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3404:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2676,
                  "mutability": "mutable",
                  "name": "startIdx",
                  "nameLocation": "3441:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2708,
                  "src": "3433:16:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3433:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2678,
                  "mutability": "mutable",
                  "name": "endIdx",
                  "nameLocation": "3467:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2708,
                  "src": "3459:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3459:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3394:85:25"
            },
            "returnParameters": {
              "id": 2684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2683,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "3530:3:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2708,
                  "src": "3501:32:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TokenMeta_$1481_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct NftMarket.TokenMeta[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2681,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2680,
                        "name": "NftMarket.TokenMeta",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1481,
                        "src": "3501:19:25"
                      },
                      "referencedDeclaration": 1481,
                      "src": "3501:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenMeta_$1481_storage_ptr",
                        "typeString": "struct NftMarket.TokenMeta"
                      }
                    },
                    "id": 2682,
                    "nodeType": "ArrayTypeName",
                    "src": "3501:21:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TokenMeta_$1481_storage_$dyn_storage_ptr",
                      "typeString": "struct NftMarket.TokenMeta[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3500:34:25"
            },
            "scope": 2728,
            "src": "3372:348:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4766
            ],
            "body": {
              "id": 2726,
              "nodeType": "Block",
              "src": "3873:54:25",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 2722,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3890:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftMarketRouter_$2728",
                          "typeString": "contract NftMarketRouter"
                        }
                      },
                      "id": 2723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2727,
                      "src": "3890:21:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) pure external returns (bytes4)"
                      }
                    },
                    "id": 2724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "3890:30:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 2721,
                  "id": 2725,
                  "nodeType": "Return",
                  "src": "3883:37:25"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 2727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "3735:16:25",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2718,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3847:8:25"
            },
            "parameters": {
              "id": 2717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2710,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "3761:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3761:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2712,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "3778:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3778:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2714,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "3795:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3795:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2716,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "3812:14:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2715,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3812:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3751:81:25"
            },
            "returnParameters": {
              "id": 2721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2720,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2727,
                  "src": "3865:6:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2719,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3865:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3864:8:25"
            },
            "scope": 2728,
            "src": "3726:201:25",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2729,
        "src": "279:3650:25",
        "usedErrors": []
      }
    ],
    "src": "65:3865:25"
  },
  "bytecode": "60a060405234801561001057600080fd5b5060405161114c38038061114c83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516110976100b56000396000818161019e015281816101fd01528181610358015281816105a2015281816106ac015281816108d60152610ae701526110976000f3fe60806040526004361061007b5760003560e01c8063741cbae41161004e578063741cbae4146101395780638f6d40d2146101595780639f37092a14610179578063c45a01551461018c57600080fd5b8063150b7a0214610080578063602c93b7146100ca57806368915327146100f75780636cde1ff814610119575b600080fd5b34801561008c57600080fd5b506100ac61009b366004610d1b565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b3480156100d657600080fd5b506100ea6100e5366004610dba565b6101d8565b6040516100c19190610def565b34801561010357600080fd5b50610117610112366004610dba565b6102ec565b005b34801561012557600080fd5b506100ea610134366004610dba565b61057d565b34801561014557600080fd5b50610117610154366004610dba565b610645565b34801561016557600080fd5b50610117610174366004610e53565b6108b4565b610117610187366004610e53565b610ac5565b34801561019857600080fd5b506101c07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c1565b604051630d3c450160e11b81526001600160a01b0384811660048301526060916000917f00000000000000000000000000000000000000000000000000000000000000001690631a788a0290602401602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610e7f565b604051631c6b2f2960e31b8152600481018690526024810185905290915081906001600160a01b0382169063e3597948906044015b600060405180830381865afa1580156102ba573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102e29190810190610f50565b9695505050505050565b600081116103365760405162461bcd60e51b8152602060048201526012602482015271526f757465723a70726963652077726f6e6760701b60448201526064015b60405180910390fd5b604051630d3c450160e11b81526001600160a01b0384811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690631a788a0290602401602060405180830381865afa1580156103a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c59190610e7f565b90506001600160a01b0381166103ed5760405162461bcd60e51b815260040161032d90611003565b604051632142170760e11b8152336004820152306024820152604481018490526001600160a01b038516906342842e0e90606401600060405180830381600087803b15801561043b57600080fd5b505af115801561044f573d6000803e3d6000fd5b50506040516323b872dd60e01b81523060048201526001600160a01b03848116602483015260448201879052871692506323b872dd9150606401600060405180830381600087803b1580156104a357600080fd5b505af11580156104b7573d6000803e3d6000fd5b5050604051631d4cb9cf60e11b815233600482015260248101869052604481018590526001600160a01b0384169250633a99739e9150606401600060405180830381600087803b15801561050a57600080fd5b505af115801561051e573d6000803e3d6000fd5b5050604080516001600160a01b0388168152602081018790523391810191909152606081018590527ffe0ff3ebd717d5c975cba5a8a1399a5530971996633841ff78361df170f67d1a925060800190505b60405180910390a150505050565b604051630d3c450160e11b81526001600160a01b0384811660048301526060916000917f00000000000000000000000000000000000000000000000000000000000000001690631a788a0290602401602060405180830381865afa1580156105e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060d9190610e7f565b6040516263249f60e81b8152600481018690526024810185905290915081906001600160a01b038216906363249f009060440161029d565b6000811161068a5760405162461bcd60e51b8152602060048201526012602482015271526f757465723a70726963652077726f6e6760701b604482015260640161032d565b604051630d3c450160e11b81526001600160a01b0384811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690631a788a0290602401602060405180830381865afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107199190610e7f565b90506001600160a01b0381166107415760405162461bcd60e51b815260040161032d90611003565b60405163620d1b0560e11b815260048101849052819033906001600160a01b0383169063c41a360a90602401602060405180830381865afa15801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190610e7f565b6001600160a01b0316146107f75760405162461bcd60e51b815260206004820152601060248201526f2937baba32b91d3737ba1037bbb732b960811b604482015260640161032d565b604051630612de9d60e11b815260048101859052602481018490526001600160a01b03821690630c25bd3a90604401600060405180830381600087803b15801561084057600080fd5b505af1158015610854573d6000803e3d6000fd5b5050604080516001600160a01b0389168152602081018890523391810191909152606081018690527f51291deb226d868906fd083064fbc9f614821b436c458d9095c9eae480812580925060800190505b60405180910390a15050505050565b604051630d3c450160e11b81526001600160a01b0383811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690631a788a0290602401602060405180830381865afa15801561091f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109439190610e7f565b90506001600160a01b03811661096b5760405162461bcd60e51b815260040161032d90611003565b60405163620d1b0560e11b815260048101839052819033906001600160a01b0383169063c41a360a90602401602060405180830381865afa1580156109b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d89190610e7f565b6001600160a01b031614610a215760405162461bcd60e51b815260206004820152601060248201526f2937baba32b91d3737ba1037bbb732b960811b604482015260640161032d565b60405163ddd637c960e01b8152600481018490526001600160a01b0382169063ddd637c990602401600060405180830381600087803b158015610a6357600080fd5b505af1158015610a77573d6000803e3d6000fd5b5050604080516001600160a01b03881681526020810187905233918101919091527f9ea4986863fc3dd36f15c8e76cecf44f311c121dc511ea352087a3e351b27ec99250606001905061056f565b604051630d3c450160e11b81526001600160a01b0383811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690631a788a0290602401602060405180830381865afa158015610b30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b549190610e7f565b90506001600160a01b038116610b7c5760405162461bcd60e51b815260040161032d90611003565b60405163d09ef24160e01b815260048101839052819034906001600160a01b0383169063d09ef24190602401608060405180830381865afa158015610bc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be99190611045565b6020015114610c335760405162461bcd60e51b8152602060048201526016602482015275526f757465723a2076616c75652069732077726f6e6760501b604482015260640161032d565b60405163c0adec3b60e01b8152336004820152602481018490526000906001600160a01b0383169063c0adec3b90349060440160206040518083038185885af1158015610c84573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610ca99190610e7f565b604080516001600160a01b038089168252602082018890528316918101919091523360608201523460808201529091507fc026fcb20fc66e2e9c95089db72b3b02425aa6b6449c45ee7735c5093b3700a69060a0016108a5565b6001600160a01b0381168114610d1857600080fd5b50565b600080600080600060808688031215610d3357600080fd5b8535610d3e81610d03565b94506020860135610d4e81610d03565b935060408601359250606086013567ffffffffffffffff80821115610d7257600080fd5b818801915088601f830112610d8657600080fd5b813581811115610d9557600080fd5b896020828501011115610da757600080fd5b9699959850939650602001949392505050565b600080600060608486031215610dcf57600080fd5b8335610dda81610d03565b95602085013595506040909401359392505050565b602080825282518282018190526000919060409081850190868401855b82811015610e4657815180518552868101518786015285810151868601526060908101519085015260809093019290850190600101610e0c565b5091979650505050505050565b60008060408385031215610e6657600080fd5b8235610e7181610d03565b946020939093013593505050565b600060208284031215610e9157600080fd5b8151610e9c81610d03565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ee257610ee2610ea3565b604052919050565b600060808284031215610efc57600080fd5b6040516080810181811067ffffffffffffffff82111715610f1f57610f1f610ea3565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60006020808385031215610f6357600080fd5b825167ffffffffffffffff80821115610f7b57600080fd5b818501915085601f830112610f8f57600080fd5b815181811115610fa157610fa1610ea3565b610faf848260051b01610eb9565b818152848101925060079190911b830184019087821115610fcf57600080fd5b928401925b81841015610ff857610fe68885610eea565b83528483019250608084019350610fd4565b979650505050505050565b60208082526022908201527f526f757465723a636f6c6c656374696f6e206d61726b6574206e6f74206578696040820152611cdd60f21b606082015260800190565b60006080828403121561105757600080fd5b610e9c8383610eea56fea264697066735822122098330d9291ac9115ac6b5b3d78efc706c4afc60f0b8712482dfa693ae58ba3a564736f6c634300080a0033",
  "bytecodeSha1": "88ee62f663821f91a0ec7c2830bfd153c38036b7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "NftMarketRouter",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "10": {},
      "12": {},
      "15": {},
      "16": {},
      "2": {},
      "23": {},
      "24": {},
      "25": {
        "NftMarketRouter.buyItem": {
          "27": [
            1599,
            1618,
            true
          ],
          "28": [
            1724,
            1771,
            true
          ]
        },
        "NftMarketRouter.cancelItem": {
          "25": [
            2136,
            2155,
            true
          ],
          "26": [
            2260,
            2302,
            true
          ]
        },
        "NftMarketRouter.changePrice": {
          "22": [
            2573,
            2583,
            true
          ],
          "23": [
            2696,
            2715,
            true
          ],
          "24": [
            2820,
            2862,
            true
          ]
        },
        "NftMarketRouter.sellItem": {
          "20": [
            945,
            955,
            true
          ],
          "21": [
            1068,
            1087,
            true
          ]
        }
      },
      "26": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "10": {},
      "12": {},
      "15": {},
      "16": {},
      "2": {},
      "23": {},
      "24": {},
      "25": {
        "NftMarketRouter.bulkGetOrders": {
          "0": [
            3665,
            3713
          ]
        },
        "NftMarketRouter.buyItem": {
          "17": [
            1591,
            1657
          ],
          "18": [
            1716,
            1798
          ],
          "19": [
            1900,
            1965
          ]
        },
        "NftMarketRouter.cancelItem": {
          "13": [
            2128,
            2194
          ],
          "14": [
            2252,
            2323
          ],
          "15": [
            2333,
            2371
          ],
          "16": [
            2381,
            2427
          ]
        },
        "NftMarketRouter.changePrice": {
          "8": [
            2565,
            2606
          ],
          "9": [
            2688,
            2754
          ],
          "10": [
            2812,
            2883
          ],
          "11": [
            2893,
            2940
          ],
          "12": [
            2950,
            3009
          ]
        },
        "NftMarketRouter.getOrderPage": {
          "7": [
            3311,
            3359
          ]
        },
        "NftMarketRouter.sellItem": {
          "1": [
            937,
            978
          ],
          "2": [
            1060,
            1126
          ],
          "3": [
            1136,
            1210
          ],
          "4": [
            1220,
            1285
          ],
          "5": [
            1295,
            1358
          ],
          "6": [
            1368,
            1423
          ]
        }
      },
      "26": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.4.0/IERC721ReceiverUpgradeable",
    "NftMarket",
    "NftMarketFactory",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/SafeMath",
    "TransferHelper"
  ],
  "deployedBytecode": "60806040526004361061007b5760003560e01c8063741cbae41161004e578063741cbae4146101395780638f6d40d2146101595780639f37092a14610179578063c45a01551461018c57600080fd5b8063150b7a0214610080578063602c93b7146100ca57806368915327146100f75780636cde1ff814610119575b600080fd5b34801561008c57600080fd5b506100ac61009b366004610d1b565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b3480156100d657600080fd5b506100ea6100e5366004610dba565b6101d8565b6040516100c19190610def565b34801561010357600080fd5b50610117610112366004610dba565b6102ec565b005b34801561012557600080fd5b506100ea610134366004610dba565b61057d565b34801561014557600080fd5b50610117610154366004610dba565b610645565b34801561016557600080fd5b50610117610174366004610e53565b6108b4565b610117610187366004610e53565b610ac5565b34801561019857600080fd5b506101c07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c1565b604051630d3c450160e11b81526001600160a01b0384811660048301526060916000917f00000000000000000000000000000000000000000000000000000000000000001690631a788a0290602401602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610e7f565b604051631c6b2f2960e31b8152600481018690526024810185905290915081906001600160a01b0382169063e3597948906044015b600060405180830381865afa1580156102ba573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102e29190810190610f50565b9695505050505050565b600081116103365760405162461bcd60e51b8152602060048201526012602482015271526f757465723a70726963652077726f6e6760701b60448201526064015b60405180910390fd5b604051630d3c450160e11b81526001600160a01b0384811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690631a788a0290602401602060405180830381865afa1580156103a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c59190610e7f565b90506001600160a01b0381166103ed5760405162461bcd60e51b815260040161032d90611003565b604051632142170760e11b8152336004820152306024820152604481018490526001600160a01b038516906342842e0e90606401600060405180830381600087803b15801561043b57600080fd5b505af115801561044f573d6000803e3d6000fd5b50506040516323b872dd60e01b81523060048201526001600160a01b03848116602483015260448201879052871692506323b872dd9150606401600060405180830381600087803b1580156104a357600080fd5b505af11580156104b7573d6000803e3d6000fd5b5050604051631d4cb9cf60e11b815233600482015260248101869052604481018590526001600160a01b0384169250633a99739e9150606401600060405180830381600087803b15801561050a57600080fd5b505af115801561051e573d6000803e3d6000fd5b5050604080516001600160a01b0388168152602081018790523391810191909152606081018590527ffe0ff3ebd717d5c975cba5a8a1399a5530971996633841ff78361df170f67d1a925060800190505b60405180910390a150505050565b604051630d3c450160e11b81526001600160a01b0384811660048301526060916000917f00000000000000000000000000000000000000000000000000000000000000001690631a788a0290602401602060405180830381865afa1580156105e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060d9190610e7f565b6040516263249f60e81b8152600481018690526024810185905290915081906001600160a01b038216906363249f009060440161029d565b6000811161068a5760405162461bcd60e51b8152602060048201526012602482015271526f757465723a70726963652077726f6e6760701b604482015260640161032d565b604051630d3c450160e11b81526001600160a01b0384811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690631a788a0290602401602060405180830381865afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107199190610e7f565b90506001600160a01b0381166107415760405162461bcd60e51b815260040161032d90611003565b60405163620d1b0560e11b815260048101849052819033906001600160a01b0383169063c41a360a90602401602060405180830381865afa15801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190610e7f565b6001600160a01b0316146107f75760405162461bcd60e51b815260206004820152601060248201526f2937baba32b91d3737ba1037bbb732b960811b604482015260640161032d565b604051630612de9d60e11b815260048101859052602481018490526001600160a01b03821690630c25bd3a90604401600060405180830381600087803b15801561084057600080fd5b505af1158015610854573d6000803e3d6000fd5b5050604080516001600160a01b0389168152602081018890523391810191909152606081018690527f51291deb226d868906fd083064fbc9f614821b436c458d9095c9eae480812580925060800190505b60405180910390a15050505050565b604051630d3c450160e11b81526001600160a01b0383811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690631a788a0290602401602060405180830381865afa15801561091f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109439190610e7f565b90506001600160a01b03811661096b5760405162461bcd60e51b815260040161032d90611003565b60405163620d1b0560e11b815260048101839052819033906001600160a01b0383169063c41a360a90602401602060405180830381865afa1580156109b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d89190610e7f565b6001600160a01b031614610a215760405162461bcd60e51b815260206004820152601060248201526f2937baba32b91d3737ba1037bbb732b960811b604482015260640161032d565b60405163ddd637c960e01b8152600481018490526001600160a01b0382169063ddd637c990602401600060405180830381600087803b158015610a6357600080fd5b505af1158015610a77573d6000803e3d6000fd5b5050604080516001600160a01b03881681526020810187905233918101919091527f9ea4986863fc3dd36f15c8e76cecf44f311c121dc511ea352087a3e351b27ec99250606001905061056f565b604051630d3c450160e11b81526001600160a01b0383811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690631a788a0290602401602060405180830381865afa158015610b30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b549190610e7f565b90506001600160a01b038116610b7c5760405162461bcd60e51b815260040161032d90611003565b60405163d09ef24160e01b815260048101839052819034906001600160a01b0383169063d09ef24190602401608060405180830381865afa158015610bc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be99190611045565b6020015114610c335760405162461bcd60e51b8152602060048201526016602482015275526f757465723a2076616c75652069732077726f6e6760501b604482015260640161032d565b60405163c0adec3b60e01b8152336004820152602481018490526000906001600160a01b0383169063c0adec3b90349060440160206040518083038185885af1158015610c84573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610ca99190610e7f565b604080516001600160a01b038089168252602082018890528316918101919091523360608201523460808201529091507fc026fcb20fc66e2e9c95089db72b3b02425aa6b6449c45ee7735c5093b3700a69060a0016108a5565b6001600160a01b0381168114610d1857600080fd5b50565b600080600080600060808688031215610d3357600080fd5b8535610d3e81610d03565b94506020860135610d4e81610d03565b935060408601359250606086013567ffffffffffffffff80821115610d7257600080fd5b818801915088601f830112610d8657600080fd5b813581811115610d9557600080fd5b896020828501011115610da757600080fd5b9699959850939650602001949392505050565b600080600060608486031215610dcf57600080fd5b8335610dda81610d03565b95602085013595506040909401359392505050565b602080825282518282018190526000919060409081850190868401855b82811015610e4657815180518552868101518786015285810151868601526060908101519085015260809093019290850190600101610e0c565b5091979650505050505050565b60008060408385031215610e6657600080fd5b8235610e7181610d03565b946020939093013593505050565b600060208284031215610e9157600080fd5b8151610e9c81610d03565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ee257610ee2610ea3565b604052919050565b600060808284031215610efc57600080fd5b6040516080810181811067ffffffffffffffff82111715610f1f57610f1f610ea3565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60006020808385031215610f6357600080fd5b825167ffffffffffffffff80821115610f7b57600080fd5b818501915085601f830112610f8f57600080fd5b815181811115610fa157610fa1610ea3565b610faf848260051b01610eb9565b818152848101925060079190911b830184019087821115610fcf57600080fd5b928401925b81841015610ff857610fe68885610eea565b83528483019250608084019350610fd4565b979650505050505050565b60208082526022908201527f526f757465723a636f6c6c656374696f6e206d61726b6574206e6f74206578696040820152611cdd60f21b606082015260800190565b60006080828403121561105757600080fd5b610e9c8383610eea56fea264697066735822122098330d9291ac9115ac6b5b3d78efc706c4afc60f0b8712482dfa693ae58ba3a564736f6c634300080a0033",
  "deployedSourceMap": "279:3650:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3726:201;;;;;;;;;;-1:-1:-1;3726:201:25;;;;;:::i;:::-;-1:-1:-1;;;3726:201:25;;;;;;;;;;;-1:-1:-1;;;;;;1253:33:29;;;1235:52;;1223:2;1208:18;3726:201:25;;;;;;;;3372:348;;;;;;;;;;-1:-1:-1;3372:348:25;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;815:615::-;;;;;;;;;;-1:-1:-1;815:615:25;;;;;:::i;:::-;;:::i;:::-;;3022:344;;;;;;;;;;-1:-1:-1;3022:344:25;;;;;:::i;:::-;;:::i;2440:576::-;;;;;;;;;;-1:-1:-1;2440:576:25;;;;;:::i;:::-;;:::i;1978:456::-;;;;;;;;;;-1:-1:-1;1978:456:25;;;;;:::i;:::-;;:::i;1436:536::-;;;;;;:::i;:::-;;:::i;340:32::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3102:32:29;;;3084:51;;3072:2;3057:18;340:32:25;2938:203:29;3372:348:25;3561:46;;-1:-1:-1;;;3561:46:25;;-1:-1:-1;;;;;3102:32:29;;;3561:46:25;;;3084:51:29;3501:32:25;;3545:13;;3578:7;3561:33;;;;3057:18:29;;3561:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3672:41;;-1:-1:-1;;;3672:41:25;;;;;3576:25:29;;;3617:18;;;3610:34;;;3545:62:25;;-1:-1:-1;3545:62:25;;-1:-1:-1;;;;;3672:23:25;;;;;3549:18:29;;3672:41:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3672:41:25;;;;;;;;;;;;:::i;:::-;3665:48;3372:348;-1:-1:-1;;;;;;3372:348:25:o;815:615::-;954:1;945:6;:10;937:41;;;;-1:-1:-1;;;937:41:25;;5862:2:29;937:41:25;;;5844:21:29;5901:2;5881:18;;;5874:30;-1:-1:-1;;;5920:18:29;;;5913:48;5978:18;;937:41:25;;;;;;;;;1004:46;;-1:-1:-1;;;1004:46:25;;-1:-1:-1;;;;;3102:32:29;;;1004:46:25;;;3084:51:29;988:13:25;;1021:7;1004:33;;;;;;3057:18:29;;1004:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;988:62;-1:-1:-1;;;;;;1068:19:25;;1060:66;;;;-1:-1:-1;;;1060:66:25;;;;;;;:::i;:::-;1136:74;;-1:-1:-1;;;1136:74:25;;1174:10;1136:74;;;6650:34:29;1194:4:25;6700:18:29;;;6693:43;6752:18;;;6745:34;;;-1:-1:-1;;;;;1136:37:25;;;;;6585:18:29;;1136:74:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1220:65:25;;-1:-1:-1;;;1220:65:25;;1262:4;1220:65;;;6650:34:29;-1:-1:-1;;;;;6720:15:29;;;6700:18;;;6693:43;6752:18;;;6745:34;;;1220:33:25;;;-1:-1:-1;1220:33:25;;-1:-1:-1;6585:18:29;;1220:65:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1295:63:25;;-1:-1:-1;;;1295:63:25;;1329:10;1295:63;;;6992:51:29;7059:18;;;7052:34;;;7102:18;;;7095:34;;;-1:-1:-1;;;;;1295:33:25;;;-1:-1:-1;1295:33:25;;-1:-1:-1;6965:18:29;;1295:63:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1373:50:25;;;-1:-1:-1;;;;;7427:15:29;;7409:34;;7474:2;7459:18;;7452:34;;;1404:10:25;7502:18:29;;;7495:43;;;;7569:2;7554:18;;7547:34;;;1373:50:25;;-1:-1:-1;7358:3:29;7343:19;;-1:-1:-1;1373:50:25;;;;;;;;927:503;815:615;;;:::o;3022:344::-;3207:46;;-1:-1:-1;;;3207:46:25;;-1:-1:-1;;;;;3102:32:29;;;3207:46:25;;;3084:51:29;3151:28:25;;3191:13;;3224:7;3207:33;;;;3057:18:29;;3207:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3318:41;;-1:-1:-1;;;3318:41:25;;;;;3576:25:29;;;3617:18;;;3610:34;;;3191:62:25;;-1:-1:-1;3191:62:25;;-1:-1:-1;;;;;3318:22:25;;;;;3549:18:29;;3318:41:25;3402:248:29;2440:576:25;2582:1;2573:6;:10;2565:41;;;;-1:-1:-1;;;2565:41:25;;5862:2:29;2565:41:25;;;5844:21:29;5901:2;5881:18;;;5874:30;-1:-1:-1;;;5920:18:29;;;5913:48;5978:18;;2565:41:25;5660:342:29;2565:41:25;2632:46;;-1:-1:-1;;;2632:46:25;;-1:-1:-1;;;;;3102:32:29;;;2632:46:25;;;3084:51:29;2616:13:25;;2649:7;2632:33;;;;;;3057:18:29;;2632:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2616:62;-1:-1:-1;;;;;;2696:19:25;;2688:66;;;;-1:-1:-1;;;2688:66:25;;;;;;;:::i;:::-;2820:28;;-1:-1:-1;;;2820:28:25;;;;;7738:25:29;;;2796:5:25;;2852:10;;-1:-1:-1;;;;;2820:18:25;;;;;7711::29;;2820:28:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2820:42:25;;2812:71;;;;-1:-1:-1;;;2812:71:25;;7976:2:29;2812:71:25;;;7958:21:29;8015:2;7995:18;;;7988:30;-1:-1:-1;;;8034:18:29;;;8027:46;8090:18;;2812:71:25;7774:340:29;2812:71:25;2893:47;;-1:-1:-1;;;2893:47:25;;;;;3576:25:29;;;3617:18;;;3610:34;;;-1:-1:-1;;;;;2893:29:25;;;;;3549:18:29;;2893:47:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2955:54:25;;;-1:-1:-1;;;;;7427:15:29;;7409:34;;7474:2;7459:18;;7452:34;;;2990:10:25;7502:18:29;;;7495:43;;;;7569:2;7554:18;;7547:34;;;2955:54:25;;-1:-1:-1;7358:3:29;7343:19;;-1:-1:-1;2955:54:25;;;;;;;;2555:461;;2440:576;;;:::o;1978:456::-;2072:46;;-1:-1:-1;;;2072:46:25;;-1:-1:-1;;;;;3102:32:29;;;2072:46:25;;;3084:51:29;2056:13:25;;2089:7;2072:33;;;;;;3057:18:29;;2072:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2056:62;-1:-1:-1;;;;;;2136:19:25;;2128:66;;;;-1:-1:-1;;;2128:66:25;;;;;;;:::i;:::-;2260:28;;-1:-1:-1;;;2260:28:25;;;;;7738:25:29;;;2236:5:25;;2292:10;;-1:-1:-1;;;;;2260:18:25;;;;;7711::29;;2260:28:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2260:42:25;;2252:71;;;;-1:-1:-1;;;2252:71:25;;7976:2:29;2252:71:25;;;7958:21:29;8015:2;7995:18;;;7988:30;-1:-1:-1;;;8034:18:29;;;8027:46;8090:18;;2252:71:25;7774:340:29;2252:71:25;2333:38;;-1:-1:-1;;;2333:38:25;;;;;7738:25:29;;;-1:-1:-1;;;;;2333:28:25;;;;;7711:18:29;;2333:38:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2386:41:25;;;-1:-1:-1;;;;;8377:15:29;;8359:34;;8424:2;8409:18;;8402:34;;;2416:10:25;8452:18:29;;;8445:43;;;;2386:41:25;;-1:-1:-1;8309:2:29;8294:18;;-1:-1:-1;2386:41:25;8119:375:29;1436:536:25;1535:46;;-1:-1:-1;;;1535:46:25;;-1:-1:-1;;;;;3102:32:29;;;1535:46:25;;;3084:51:29;1519:13:25;;1552:7;1535:33;;;;;;3057:18:29;;1535:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1519:62;-1:-1:-1;;;;;;1599:19:25;;1591:66;;;;-1:-1:-1;;;1591:66:25;;;;;;;:::i;:::-;1724:28;;-1:-1:-1;;;1724:28:25;;;;;7738:25:29;;;1699:5:25;;1762:9;;-1:-1:-1;;;;;1724:18:25;;;;;7711::29;;1724:28:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;:47;1716:82;;;;-1:-1:-1;;;1716:82:25;;8960:2:29;1716:82:25;;;8942:21:29;8999:2;8979:18;;;8972:30;-1:-1:-1;;;9018:18:29;;;9011:52;9080:18;;1716:82:25;8758:346:29;1716:82:25;1825:65;;-1:-1:-1;;;1825:65:25;;1869:10;1825:65;;;9283:51:29;9350:18;;;9343:34;;;1808:14:25;;-1:-1:-1;;;;;1825:25:25;;;;;1858:9;;9256:18:29;;1825:65:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1905:60;;;-1:-1:-1;;;;;9703:15:29;;;9685:34;;9750:2;9735:18;;9728:34;;;9798:15;;9778:18;;;9771:43;;;;1943:10:25;9845:2:29;9830:18;;9823:43;1955:9:25;9897:3:29;9882:19;;9875:35;1808:82:25;;-1:-1:-1;1905:60:25;;9634:3:29;9619:19;1905:60:25;9388:528:29;14:131;-1:-1:-1;;;;;89:31:29;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:936::-;247:6;255;263;271;279;332:3;320:9;311:7;307:23;303:33;300:53;;;349:1;346;339:12;300:53;388:9;375:23;407:31;432:5;407:31;:::i;:::-;457:5;-1:-1:-1;514:2:29;499:18;;486:32;527:33;486:32;527:33;:::i;:::-;579:7;-1:-1:-1;633:2:29;618:18;;605:32;;-1:-1:-1;688:2:29;673:18;;660:32;711:18;741:14;;;738:34;;;768:1;765;758:12;738:34;806:6;795:9;791:22;781:32;;851:7;844:4;840:2;836:13;832:27;822:55;;873:1;870;863:12;822:55;913:2;900:16;939:2;931:6;928:14;925:34;;;955:1;952;945:12;925:34;1000:7;995:2;986:6;982:2;978:15;974:24;971:37;968:57;;;1021:1;1018;1011:12;968:57;150:936;;;;-1:-1:-1;150:936:29;;-1:-1:-1;1052:2:29;1044:11;;1074:6;150:936;-1:-1:-1;;;150:936:29:o;1298:383::-;1375:6;1383;1391;1444:2;1432:9;1423:7;1419:23;1415:32;1412:52;;;1460:1;1457;1450:12;1412:52;1499:9;1486:23;1518:31;1543:5;1518:31;:::i;:::-;1568:5;1620:2;1605:18;;1592:32;;-1:-1:-1;1671:2:29;1656:18;;;1643:32;;1298:383;-1:-1:-1;;;1298:383:29:o;1686:927::-;1911:2;1963:21;;;2033:13;;1936:18;;;2055:22;;;1882:4;;1911:2;2096;;2114:18;;;;2155:15;;;1882:4;2198:389;2212:6;2209:1;2206:13;2198:389;;;2271:13;;2309:9;;2297:22;;2359:11;;;2353:18;2339:12;;;2332:40;2412:11;;;2406:18;2392:12;;;2385:40;2448:4;2492:11;;;2486:18;2472:12;;;2465:40;2534:4;2525:14;;;;2562:15;;;;2234:1;2227:9;2198:389;;;-1:-1:-1;2604:3:29;;1686:927;-1:-1:-1;;;;;;;1686:927:29:o;2618:315::-;2686:6;2694;2747:2;2735:9;2726:7;2722:23;2718:32;2715:52;;;2763:1;2760;2753:12;2715:52;2802:9;2789:23;2821:31;2846:5;2821:31;:::i;:::-;2871:5;2923:2;2908:18;;;;2895:32;;-1:-1:-1;;;2618:315:29:o;3146:251::-;3216:6;3269:2;3257:9;3248:7;3244:23;3240:32;3237:52;;;3285:1;3282;3275:12;3237:52;3317:9;3311:16;3336:31;3361:5;3336:31;:::i;:::-;3386:5;3146:251;-1:-1:-1;;;3146:251:29:o;3655:127::-;3716:10;3711:3;3707:20;3704:1;3697:31;3747:4;3744:1;3737:15;3771:4;3768:1;3761:15;3787:275;3858:2;3852:9;3923:2;3904:13;;-1:-1:-1;;3900:27:29;3888:40;;3958:18;3943:34;;3979:22;;;3940:62;3937:88;;;4005:18;;:::i;:::-;4041:2;4034:22;3787:275;;-1:-1:-1;3787:275:29:o;4067:589::-;4134:5;4182:4;4170:9;4165:3;4161:19;4157:30;4154:50;;;4200:1;4197;4190:12;4154:50;4233:2;4227:9;4275:4;4267:6;4263:17;4346:6;4334:10;4331:22;4310:18;4298:10;4295:34;4292:62;4289:88;;;4357:18;;:::i;:::-;4397:10;4393:2;4386:22;;4426:6;4417:15;;4462:9;4456:16;4448:6;4441:32;4527:2;4516:9;4512:18;4506:25;4501:2;4493:6;4489:15;4482:50;4586:2;4575:9;4571:18;4565:25;4560:2;4552:6;4548:15;4541:50;4645:2;4634:9;4630:18;4624:25;4619:2;4611:6;4607:15;4600:50;;4067:589;;;;:::o;4661:994::-;4783:6;4814:2;4857;4845:9;4836:7;4832:23;4828:32;4825:52;;;4873:1;4870;4863:12;4825:52;4906:9;4900:16;4935:18;4976:2;4968:6;4965:14;4962:34;;;4992:1;4989;4982:12;4962:34;5030:6;5019:9;5015:22;5005:32;;5075:7;5068:4;5064:2;5060:13;5056:27;5046:55;;5097:1;5094;5087:12;5046:55;5126:2;5120:9;5148:2;5144;5141:10;5138:36;;;5154:18;;:::i;:::-;5194:36;5226:2;5221;5218:1;5214:10;5210:19;5194:36;:::i;:::-;5264:15;;;5295:12;;;;-1:-1:-1;5346:1:29;5342:10;;;;5334:19;;5330:28;;;5370:19;;;5367:39;;;5402:1;5399;5392:12;5367:39;5426:11;;;;5446:179;5462:6;5457:3;5454:15;5446:179;;;5530:52;5574:7;5569:3;5530:52;:::i;:::-;5525:3;5518:65;5612:2;5607:3;5603:12;5596:19;;5488:4;5483:3;5479:14;5472:21;;5446:179;;;5644:5;4661:994;-1:-1:-1;;;;;;;4661:994:29:o;6007:398::-;6209:2;6191:21;;;6248:2;6228:18;;;6221:30;6287:34;6282:2;6267:18;;6260:62;-1:-1:-1;;;6353:2:29;6338:18;;6331:32;6395:3;6380:19;;6007:398::o;8499:254::-;8596:6;8649:3;8637:9;8628:7;8624:23;8620:33;8617:53;;;8666:1;8663;8656:12;8617:53;8689:58;8739:7;8728:9;8689:58;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    279,
    3929
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x741CBAE4 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x741CBAE4 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x8F6D40D2 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x9F37092A EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x602C93B7 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x68915327 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6CDE1FF8 EQ PUSH2 0x119 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0xD1B JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x2EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x117 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xAC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD3C4501 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x1A788A02 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x244 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C6B2F29 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xE3597948 SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2E2 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF50 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x526F757465723A70726963652077726F6E67 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD3C4501 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x1A788A02 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D SWAP1 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x44F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE DUP8 AND SWAP3 POP PUSH4 0x23B872DD SWAP2 POP PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x1D4CB9CF PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0x3A99739E SWAP2 POP PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x51E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0xFE0FF3EBD717D5C975CBA5A8A1399A5530971996633841FF78361DF170F67D1A SWAP3 POP PUSH1 0x80 ADD SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD3C4501 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x1A788A02 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x60D SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x63249F PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x63249F00 SWAP1 PUSH1 0x44 ADD PUSH2 0x29D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x526F757465723A70726963652077726F6E67 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD3C4501 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x1A788A02 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x719 SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x741 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D SWAP1 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x620D1B05 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xC41A360A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x78A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2937BABA32B91D3737BA1037BBB732B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x612DE9D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xC25BD3A SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x840 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x854 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH32 0x51291DEB226D868906FD083064FBC9F614821B436C458D9095C9EAE480812580 SWAP3 POP PUSH1 0x80 ADD SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD3C4501 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x1A788A02 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x91F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x943 SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D SWAP1 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x620D1B05 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xC41A360A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2937BABA32B91D3737BA1037BBB732B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xDDD637C9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xDDD637C9 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x9EA4986863FC3DD36F15C8E76CECF44F311C121DC511EA352087A3E351B27EC9 SWAP3 POP PUSH1 0x60 ADD SWAP1 POP PUSH2 0x56F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD3C4501 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x1A788A02 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB54 SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D SWAP1 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD09EF241 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 SWAP1 CALLVALUE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xD09EF241 SWAP1 PUSH1 0x24 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD EQ PUSH2 0xC33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x526F757465723A2076616C75652069732077726F6E67 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC0ADEC3B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xC0ADEC3B SWAP1 CALLVALUE SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA9 SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP9 SWAP1 MSTORE DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE CALLVALUE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH32 0xC026FCB20FC66E2E9C95089DB72B3B02425AA6B6449C45EE7735C5093B3700A6 SWAP1 PUSH1 0xA0 ADD PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xD3E DUP2 PUSH2 0xD03 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xD4E DUP2 PUSH2 0xD03 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xDDA DUP2 PUSH2 0xD03 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE46 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xE0C JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xE71 DUP2 PUSH2 0xD03 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE9C DUP2 PUSH2 0xD03 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xEE2 JUMPI PUSH2 0xEE2 PUSH2 0xEA3 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF1F JUMPI PUSH2 0xF1F PUSH2 0xEA3 JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP1 SWAP2 POP DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xFA1 JUMPI PUSH2 0xFA1 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0xFAF DUP5 DUP3 PUSH1 0x5 SHL ADD PUSH2 0xEB9 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP PUSH1 0x7 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP8 DUP3 GT ISZERO PUSH2 0xFCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0xFF8 JUMPI PUSH2 0xFE6 DUP9 DUP6 PUSH2 0xEEA JUMP JUMPDEST DUP4 MSTORE DUP5 DUP4 ADD SWAP3 POP PUSH1 0x80 DUP5 ADD SWAP4 POP PUSH2 0xFD4 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x526F757465723A636F6C6C656374696F6E206D61726B6574206E6F7420657869 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1CDD PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1057 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9C DUP4 DUP4 PUSH2 0xEEA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 CALLER 0xD SWAP3 SWAP2 0xAC SWAP2 ISZERO 0xAC PUSH12 0x5B3D78EFC706C4AFC60F0B87 SLT BASEFEE 0x2D STATICCALL PUSH10 0x3AE58BA3A564736F6C63 NUMBER STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        279,
        3929
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "8": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "LT",
      "path": "25"
    },
    "9": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x7B"
    },
    "12": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "13": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "16": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "SHR",
      "path": "25"
    },
    "19": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "DUP1",
      "path": "25"
    },
    "20": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x741CBAE4"
    },
    "25": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "GT",
      "path": "25"
    },
    "26": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "30": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "DUP1",
      "path": "25"
    },
    "31": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x741CBAE4"
    },
    "36": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "EQ",
      "path": "25"
    },
    "37": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x139"
    },
    "40": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "41": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "DUP1",
      "path": "25"
    },
    "42": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x8F6D40D2"
    },
    "47": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "EQ",
      "path": "25"
    },
    "48": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x159"
    },
    "51": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "52": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "DUP1",
      "path": "25"
    },
    "53": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x9F37092A"
    },
    "58": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "EQ",
      "path": "25"
    },
    "59": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x179"
    },
    "62": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "63": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "DUP1",
      "path": "25"
    },
    "64": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xC45A0155"
    },
    "69": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "EQ",
      "path": "25"
    },
    "70": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x18C"
    },
    "73": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "74": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "DUP1",
      "path": "25"
    },
    "77": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "REVERT",
      "path": "25"
    },
    "78": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "79": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "DUP1",
      "path": "25"
    },
    "80": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x150B7A02"
    },
    "85": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "EQ",
      "path": "25"
    },
    "86": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x80"
    },
    "89": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "90": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "DUP1",
      "path": "25"
    },
    "91": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x602C93B7"
    },
    "96": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "EQ",
      "path": "25"
    },
    "97": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xCA"
    },
    "100": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "101": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "DUP1",
      "path": "25"
    },
    "102": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x68915327"
    },
    "107": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "EQ",
      "path": "25"
    },
    "108": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF7"
    },
    "111": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "112": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "DUP1",
      "path": "25"
    },
    "113": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x6CDE1FF8"
    },
    "118": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "EQ",
      "path": "25"
    },
    "119": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x119"
    },
    "122": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "123": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "124": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "126": {
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "DUP1",
      "path": "25"
    },
    "127": {
      "first_revert": true,
      "fn": null,
      "offset": [
        279,
        3929
      ],
      "op": "REVERT",
      "path": "25"
    },
    "128": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "129": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "130": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "DUP1",
      "path": "25"
    },
    "131": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "132": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x8C"
    },
    "135": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "136": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "138": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "DUP1",
      "path": "25"
    },
    "139": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "REVERT",
      "path": "25"
    },
    "140": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "141": {
      "op": "POP"
    },
    "142": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xAC"
    },
    "145": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9B"
    },
    "148": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "149": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "151": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD1B"
    },
    "154": {
      "fn": "NftMarketRouter.onERC721Received",
      "jump": "i",
      "offset": [
        3726,
        3927
      ],
      "op": "JUMP",
      "path": "25"
    },
    "155": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "156": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "161": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "163": {
      "op": "SHL"
    },
    "164": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "165": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "SWAP5",
      "path": "25"
    },
    "166": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "POP",
      "path": "25"
    },
    "167": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "POP",
      "path": "25"
    },
    "168": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "POP",
      "path": "25"
    },
    "169": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "POP",
      "path": "25"
    },
    "170": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "POP",
      "path": "25"
    },
    "171": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "JUMP",
      "path": "25"
    },
    "172": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "173": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "175": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "180": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "182": {
      "op": "SHL"
    },
    "183": {
      "op": "SUB"
    },
    "184": {
      "op": "NOT"
    },
    "185": {
      "op": "SWAP1"
    },
    "186": {
      "op": "SWAP2"
    },
    "187": {
      "op": "AND"
    },
    "188": {
      "op": "DUP2"
    },
    "189": {
      "op": "MSTORE"
    },
    "190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "192": {
      "op": "ADD"
    },
    "193": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "194": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "196": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "197": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "DUP1",
      "path": "25"
    },
    "198": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "199": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "SUB",
      "path": "25"
    },
    "200": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "201": {
      "fn": "NftMarketRouter.onERC721Received",
      "offset": [
        3726,
        3927
      ],
      "op": "RETURN",
      "path": "25"
    },
    "202": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "203": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "204": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "DUP1",
      "path": "25"
    },
    "205": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "206": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xD6"
    },
    "209": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "210": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "212": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "DUP1",
      "path": "25"
    },
    "213": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "REVERT",
      "path": "25"
    },
    "214": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "215": {
      "op": "POP"
    },
    "216": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xEA"
    },
    "219": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE5"
    },
    "222": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "223": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "225": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDBA"
    },
    "228": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "jump": "i",
      "offset": [
        3372,
        3720
      ],
      "op": "JUMP",
      "path": "25"
    },
    "229": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "230": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1D8"
    },
    "233": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "jump": "i",
      "offset": [
        3372,
        3720
      ],
      "op": "JUMP",
      "path": "25"
    },
    "234": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "235": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "237": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "238": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xC1"
    },
    "241": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "242": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "243": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDEF"
    },
    "246": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "jump": "i",
      "offset": [
        3372,
        3720
      ],
      "op": "JUMP",
      "path": "25"
    },
    "247": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "248": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "249": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "DUP1",
      "path": "25"
    },
    "250": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "251": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x103"
    },
    "254": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "255": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "257": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "DUP1",
      "path": "25"
    },
    "258": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "REVERT",
      "path": "25"
    },
    "259": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "260": {
      "op": "POP"
    },
    "261": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x117"
    },
    "264": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x112"
    },
    "267": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "268": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "270": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDBA"
    },
    "273": {
      "fn": "NftMarketRouter.sellItem",
      "jump": "i",
      "offset": [
        815,
        1430
      ],
      "op": "JUMP",
      "path": "25"
    },
    "274": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "275": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2EC"
    },
    "278": {
      "fn": "NftMarketRouter.sellItem",
      "jump": "i",
      "offset": [
        815,
        1430
      ],
      "op": "JUMP",
      "path": "25"
    },
    "279": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "280": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "STOP",
      "path": "25"
    },
    "281": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "282": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "283": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "DUP1",
      "path": "25"
    },
    "284": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "285": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x125"
    },
    "288": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "289": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "291": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "DUP1",
      "path": "25"
    },
    "292": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "REVERT",
      "path": "25"
    },
    "293": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "294": {
      "op": "POP"
    },
    "295": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xEA"
    },
    "298": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x134"
    },
    "301": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "302": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "304": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDBA"
    },
    "307": {
      "fn": "NftMarketRouter.getOrderPage",
      "jump": "i",
      "offset": [
        3022,
        3366
      ],
      "op": "JUMP",
      "path": "25"
    },
    "308": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "309": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x57D"
    },
    "312": {
      "fn": "NftMarketRouter.getOrderPage",
      "jump": "i",
      "offset": [
        3022,
        3366
      ],
      "op": "JUMP",
      "path": "25"
    },
    "313": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "314": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "315": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "DUP1",
      "path": "25"
    },
    "316": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "317": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x145"
    },
    "320": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "321": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "323": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "DUP1",
      "path": "25"
    },
    "324": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "REVERT",
      "path": "25"
    },
    "325": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "326": {
      "op": "POP"
    },
    "327": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x117"
    },
    "330": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x154"
    },
    "333": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "334": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "336": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xDBA"
    },
    "339": {
      "fn": "NftMarketRouter.changePrice",
      "jump": "i",
      "offset": [
        2440,
        3016
      ],
      "op": "JUMP",
      "path": "25"
    },
    "340": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "341": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x645"
    },
    "344": {
      "fn": "NftMarketRouter.changePrice",
      "jump": "i",
      "offset": [
        2440,
        3016
      ],
      "op": "JUMP",
      "path": "25"
    },
    "345": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "346": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "347": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "DUP1",
      "path": "25"
    },
    "348": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "349": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x165"
    },
    "352": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "353": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "355": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "DUP1",
      "path": "25"
    },
    "356": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "REVERT",
      "path": "25"
    },
    "357": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "358": {
      "op": "POP"
    },
    "359": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x117"
    },
    "362": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x174"
    },
    "365": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "366": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "368": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE53"
    },
    "371": {
      "fn": "NftMarketRouter.cancelItem",
      "jump": "i",
      "offset": [
        1978,
        2434
      ],
      "op": "JUMP",
      "path": "25"
    },
    "372": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "373": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x8B4"
    },
    "376": {
      "fn": "NftMarketRouter.cancelItem",
      "jump": "i",
      "offset": [
        1978,
        2434
      ],
      "op": "JUMP",
      "path": "25"
    },
    "377": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1436,
        1972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "378": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1436,
        1972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x117"
    },
    "381": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1436,
        1972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x187"
    },
    "384": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1436,
        1972
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "385": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1436,
        1972
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "387": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1436,
        1972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE53"
    },
    "390": {
      "fn": "NftMarketRouter.buyItem",
      "jump": "i",
      "offset": [
        1436,
        1972
      ],
      "op": "JUMP",
      "path": "25"
    },
    "391": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1436,
        1972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "392": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1436,
        1972
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xAC5"
    },
    "395": {
      "fn": "NftMarketRouter.buyItem",
      "jump": "i",
      "offset": [
        1436,
        1972
      ],
      "op": "JUMP",
      "path": "25"
    },
    "396": {
      "offset": [
        340,
        372
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "397": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "398": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "DUP1",
      "path": "25"
    },
    "399": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "400": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x198"
    },
    "403": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "404": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "406": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "DUP1",
      "path": "25"
    },
    "407": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "REVERT",
      "path": "25"
    },
    "408": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "409": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "POP",
      "path": "25"
    },
    "410": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1C0"
    },
    "413": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x0"
    },
    "446": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "DUP2",
      "path": "25"
    },
    "447": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "JUMP",
      "path": "25"
    },
    "448": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "449": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "451": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        340,
        372
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "458": {
      "op": "SHL"
    },
    "459": {
      "op": "SUB"
    },
    "460": {
      "op": "SWAP1"
    },
    "461": {
      "op": "SWAP2"
    },
    "462": {
      "op": "AND"
    },
    "463": {
      "op": "DUP2"
    },
    "464": {
      "op": "MSTORE"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "467": {
      "op": "ADD"
    },
    "468": {
      "offset": [
        340,
        372
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xC1"
    },
    "471": {
      "op": "JUMP"
    },
    "472": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "473": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "475": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "476": {
      "op": "PUSH4",
      "value": "0xD3C4501"
    },
    "481": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "483": {
      "op": "SHL"
    },
    "484": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "DUP2",
      "path": "25"
    },
    "485": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "492": {
      "op": "SHL"
    },
    "493": {
      "op": "SUB"
    },
    "494": {
      "op": "DUP5"
    },
    "495": {
      "op": "DUP2"
    },
    "496": {
      "op": "AND"
    },
    "497": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "499": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "DUP4",
      "path": "25"
    },
    "500": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "ADD",
      "path": "25"
    },
    "501": {
      "op": "MSTORE"
    },
    "502": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3501,
        3533
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "504": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3501,
        3533
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "505": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3545,
        3558
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "507": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3545,
        3558
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "508": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3578,
        3585
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x0"
    },
    "541": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3594
      ],
      "op": "AND",
      "path": "25"
    },
    "542": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3594
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "543": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3594
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x1A788A02"
    },
    "548": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3594
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "551": {
      "op": "ADD"
    },
    "552": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "554": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "556": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "557": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "DUP1",
      "path": "25"
    },
    "558": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "DUP4",
      "path": "25"
    },
    "559": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "SUB",
      "path": "25"
    },
    "560": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "DUP2",
      "path": "25"
    },
    "561": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "DUP7",
      "path": "25"
    },
    "562": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "GAS",
      "path": "25"
    },
    "563": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "564": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "565": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "DUP1",
      "path": "25"
    },
    "566": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "567": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x244"
    },
    "570": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "571": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "572": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "574": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "DUP1",
      "path": "25"
    },
    "575": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "576": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "577": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "579": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "REVERT",
      "path": "25"
    },
    "580": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "581": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "POP",
      "path": "25"
    },
    "582": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "POP",
      "path": "25"
    },
    "583": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "POP",
      "path": "25"
    },
    "584": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "POP",
      "path": "25"
    },
    "585": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "587": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "588": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "589": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "591": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "NOT",
      "path": "25"
    },
    "592": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "594": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "DUP3",
      "path": "25"
    },
    "595": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "ADD",
      "path": "25"
    },
    "596": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "AND",
      "path": "25"
    },
    "597": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "DUP3",
      "path": "25"
    },
    "598": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "ADD",
      "path": "25"
    },
    "599": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "DUP1",
      "path": "25"
    },
    "600": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "602": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "603": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "POP",
      "path": "25"
    },
    "604": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "DUP2",
      "path": "25"
    },
    "605": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "ADD",
      "path": "25"
    },
    "606": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "607": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x268"
    },
    "610": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "611": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "612": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE7F"
    },
    "615": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "jump": "i",
      "offset": [
        3561,
        3607
      ],
      "op": "JUMP",
      "path": "25"
    },
    "616": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3561,
        3607
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "617": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 0,
      "value": "0x40"
    },
    "619": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "620": {
      "op": "PUSH4",
      "value": "0x1C6B2F29"
    },
    "625": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "627": {
      "op": "SHL"
    },
    "628": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "DUP2",
      "path": "25"
    },
    "629": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "630": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "632": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "DUP2",
      "path": "25"
    },
    "633": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "ADD",
      "path": "25"
    },
    "634": {
      "op": "DUP7"
    },
    "635": {
      "op": "SWAP1"
    },
    "636": {
      "op": "MSTORE"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "639": {
      "op": "DUP2"
    },
    "640": {
      "op": "ADD"
    },
    "641": {
      "op": "DUP6"
    },
    "642": {
      "op": "SWAP1"
    },
    "643": {
      "op": "MSTORE"
    },
    "644": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3545,
        3607
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "645": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3545,
        3607
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "646": {
      "op": "POP"
    },
    "647": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3545,
        3607
      ],
      "op": "DUP2",
      "path": "25"
    },
    "648": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3545,
        3607
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "655": {
      "op": "SHL"
    },
    "656": {
      "op": "SUB"
    },
    "657": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3695
      ],
      "op": "DUP3",
      "path": "25"
    },
    "658": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3695
      ],
      "op": "AND",
      "path": "25"
    },
    "659": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3695
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "660": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3695
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE3597948"
    },
    "665": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3695
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "668": {
      "op": "ADD"
    },
    "669": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "670": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "672": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "674": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "675": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "DUP1",
      "path": "25"
    },
    "676": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "DUP4",
      "path": "25"
    },
    "677": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "SUB",
      "path": "25"
    },
    "678": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "DUP2",
      "path": "25"
    },
    "679": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "DUP7",
      "path": "25"
    },
    "680": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "GAS",
      "path": "25"
    },
    "681": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "682": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "683": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "DUP1",
      "path": "25"
    },
    "684": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "685": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2BA"
    },
    "688": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "689": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "690": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "692": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "DUP1",
      "path": "25"
    },
    "693": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "694": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "695": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "697": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "REVERT",
      "path": "25"
    },
    "698": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "699": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "POP",
      "path": "25"
    },
    "700": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "POP",
      "path": "25"
    },
    "701": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "POP",
      "path": "25"
    },
    "702": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "POP",
      "path": "25"
    },
    "703": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "705": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "706": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "707": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "709": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "DUP3",
      "path": "25"
    },
    "710": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "711": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "713": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "714": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "715": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "DUP2",
      "path": "25"
    },
    "716": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "ADD",
      "path": "25"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "719": {
      "op": "NOT"
    },
    "720": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "AND",
      "path": "25"
    },
    "721": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "DUP3",
      "path": "25"
    },
    "722": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "ADD",
      "path": "25"
    },
    "723": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "725": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "726": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2E2"
    },
    "729": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "730": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "731": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "DUP2",
      "path": "25"
    },
    "732": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "ADD",
      "path": "25"
    },
    "733": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "734": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF50"
    },
    "737": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "jump": "i",
      "offset": [
        3672,
        3713
      ],
      "op": "JUMP",
      "path": "25"
    },
    "738": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3672,
        3713
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "739": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3665,
        3713
      ],
      "op": "SWAP7",
      "path": "25"
    },
    "740": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "offset": [
        3372,
        3720
      ],
      "op": "SWAP6",
      "path": "25"
    },
    "741": {
      "op": "POP"
    },
    "742": {
      "op": "POP"
    },
    "743": {
      "op": "POP"
    },
    "744": {
      "op": "POP"
    },
    "745": {
      "op": "POP"
    },
    "746": {
      "op": "POP"
    },
    "747": {
      "fn": "NftMarketRouter.bulkGetOrders",
      "jump": "o",
      "offset": [
        3372,
        3720
      ],
      "op": "JUMP",
      "path": "25"
    },
    "748": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "749": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        954,
        955
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 1,
      "value": "0x0"
    },
    "751": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        945,
        951
      ],
      "op": "DUP2",
      "path": "25"
    },
    "752": {
      "branch": 20,
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        945,
        955
      ],
      "op": "GT",
      "path": "25"
    },
    "753": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x336"
    },
    "756": {
      "branch": 20,
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "757": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "759": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "766": {
      "op": "SHL"
    },
    "767": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "DUP2",
      "path": "25"
    },
    "768": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "771": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "773": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "DUP3",
      "path": "25"
    },
    "774": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "ADD",
      "path": "25"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "780": {
      "op": "DUP3"
    },
    "781": {
      "op": "ADD"
    },
    "782": {
      "op": "MSTORE"
    },
    "783": {
      "op": "PUSH18",
      "value": "0x526F757465723A70726963652077726F6E67"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "804": {
      "op": "SHL"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "807": {
      "op": "DUP3"
    },
    "808": {
      "op": "ADD"
    },
    "809": {
      "op": "MSTORE"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "812": {
      "op": "ADD"
    },
    "813": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "814": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "816": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "817": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "DUP1",
      "path": "25"
    },
    "818": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "819": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "SUB",
      "path": "25"
    },
    "820": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "821": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "25"
    },
    "822": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        937,
        978
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "823": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "825": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "826": {
      "op": "PUSH4",
      "value": "0xD3C4501"
    },
    "831": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "833": {
      "op": "SHL"
    },
    "834": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "DUP2",
      "path": "25"
    },
    "835": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "840": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "842": {
      "op": "SHL"
    },
    "843": {
      "op": "SUB"
    },
    "844": {
      "op": "DUP5"
    },
    "845": {
      "op": "DUP2"
    },
    "846": {
      "op": "AND"
    },
    "847": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "849": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "DUP4",
      "path": "25"
    },
    "850": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "ADD",
      "path": "25"
    },
    "851": {
      "op": "MSTORE"
    },
    "852": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        988,
        1001
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "854": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        988,
        1001
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "855": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1021,
        1028
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x0"
    },
    "888": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1037
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "889": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1037
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "890": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1037
      ],
      "op": "AND",
      "path": "25"
    },
    "891": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1037
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "892": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1037
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x1A788A02"
    },
    "897": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1037
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "900": {
      "op": "ADD"
    },
    "901": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "903": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "905": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "906": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "DUP1",
      "path": "25"
    },
    "907": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "DUP4",
      "path": "25"
    },
    "908": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "SUB",
      "path": "25"
    },
    "909": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "DUP2",
      "path": "25"
    },
    "910": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "DUP7",
      "path": "25"
    },
    "911": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "GAS",
      "path": "25"
    },
    "912": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "913": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "914": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "DUP1",
      "path": "25"
    },
    "915": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "916": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3A1"
    },
    "919": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "920": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "921": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "923": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "DUP1",
      "path": "25"
    },
    "924": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "925": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "926": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "928": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "REVERT",
      "path": "25"
    },
    "929": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "930": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "POP",
      "path": "25"
    },
    "931": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "POP",
      "path": "25"
    },
    "932": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "POP",
      "path": "25"
    },
    "933": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "POP",
      "path": "25"
    },
    "934": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "936": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "937": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "938": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "940": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "NOT",
      "path": "25"
    },
    "941": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "943": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "DUP3",
      "path": "25"
    },
    "944": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "ADD",
      "path": "25"
    },
    "945": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "AND",
      "path": "25"
    },
    "946": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "DUP3",
      "path": "25"
    },
    "947": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "ADD",
      "path": "25"
    },
    "948": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "DUP1",
      "path": "25"
    },
    "949": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "951": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "952": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "POP",
      "path": "25"
    },
    "953": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "DUP2",
      "path": "25"
    },
    "954": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "ADD",
      "path": "25"
    },
    "955": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "956": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3C5"
    },
    "959": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "960": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "961": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE7F"
    },
    "964": {
      "fn": "NftMarketRouter.sellItem",
      "jump": "i",
      "offset": [
        1004,
        1050
      ],
      "op": "JUMP",
      "path": "25"
    },
    "965": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1004,
        1050
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "966": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        988,
        1050
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "967": {
      "op": "POP"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "974": {
      "op": "SHL"
    },
    "975": {
      "op": "SUB"
    },
    "976": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1068,
        1087
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 2
    },
    "977": {
      "branch": 21,
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1068,
        1087
      ],
      "op": "AND",
      "path": "25"
    },
    "978": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1060,
        1126
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x3ED"
    },
    "981": {
      "branch": 21,
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1060,
        1126
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "982": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1060,
        1126
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "984": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1060,
        1126
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "985": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "989": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "991": {
      "op": "SHL"
    },
    "992": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1060,
        1126
      ],
      "op": "DUP2",
      "path": "25"
    },
    "993": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1060,
        1126
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "994": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1060,
        1126
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "996": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1060,
        1126
      ],
      "op": "ADD",
      "path": "25"
    },
    "997": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1060,
        1126
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x32D"
    },
    "1000": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1060,
        1126
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1001": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1060,
        1126
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1003"
    },
    "1004": {
      "fn": "NftMarketRouter.sellItem",
      "jump": "i",
      "offset": [
        1060,
        1126
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1005": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1060,
        1126
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1006": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 3,
      "value": "0x40"
    },
    "1008": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1009": {
      "op": "PUSH4",
      "value": "0x21421707"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1016": {
      "op": "SHL"
    },
    "1017": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1018": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1019": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1174,
        1184
      ],
      "op": "CALLER",
      "path": "25"
    },
    "1020": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1022": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1023": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "ADD",
      "path": "25"
    },
    "1024": {
      "op": "MSTORE"
    },
    "1025": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1194,
        1198
      ],
      "op": "ADDRESS",
      "path": "25"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1028": {
      "op": "DUP3"
    },
    "1029": {
      "op": "ADD"
    },
    "1030": {
      "op": "MSTORE"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1033": {
      "op": "DUP2"
    },
    "1034": {
      "op": "ADD"
    },
    "1035": {
      "op": "DUP5"
    },
    "1036": {
      "op": "SWAP1"
    },
    "1037": {
      "op": "MSTORE"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1044": {
      "op": "SHL"
    },
    "1045": {
      "op": "SUB"
    },
    "1046": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1173
      ],
      "op": "DUP6",
      "path": "25"
    },
    "1047": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1173
      ],
      "op": "AND",
      "path": "25"
    },
    "1048": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1173
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1049": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1173
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x42842E0E"
    },
    "1054": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1173
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1057": {
      "op": "ADD"
    },
    "1058": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1060": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1062": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1063": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1064": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1065": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "SUB",
      "path": "25"
    },
    "1066": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1067": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1069": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "DUP8",
      "path": "25"
    },
    "1070": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1071": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "1072": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1073": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1074": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1075": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x43B"
    },
    "1078": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1079": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1081": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1082": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1083": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1084": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "POP",
      "path": "25"
    },
    "1085": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "GAS",
      "path": "25"
    },
    "1086": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "CALL",
      "path": "25"
    },
    "1087": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1088": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1089": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1090": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x44F"
    },
    "1093": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1094": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1095": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1097": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1098": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "1099": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1100": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1102": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1103": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1136,
        1210
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1104": {
      "op": "POP"
    },
    "1105": {
      "op": "POP"
    },
    "1106": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 4,
      "value": "0x40"
    },
    "1108": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1109": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1116": {
      "op": "SHL"
    },
    "1117": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1118": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1119": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1262,
        1266
      ],
      "op": "ADDRESS",
      "path": "25"
    },
    "1120": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1122": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1123": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "ADD",
      "path": "25"
    },
    "1124": {
      "op": "MSTORE"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1131": {
      "op": "SHL"
    },
    "1132": {
      "op": "SUB"
    },
    "1133": {
      "op": "DUP5"
    },
    "1134": {
      "op": "DUP2"
    },
    "1135": {
      "op": "AND"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1138": {
      "op": "DUP4"
    },
    "1139": {
      "op": "ADD"
    },
    "1140": {
      "op": "MSTORE"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1143": {
      "op": "DUP3"
    },
    "1144": {
      "op": "ADD"
    },
    "1145": {
      "op": "DUP8"
    },
    "1146": {
      "op": "SWAP1"
    },
    "1147": {
      "op": "MSTORE"
    },
    "1148": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1253
      ],
      "op": "DUP8",
      "path": "25"
    },
    "1149": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1253
      ],
      "op": "AND",
      "path": "25"
    },
    "1150": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1253
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1151": {
      "op": "POP"
    },
    "1152": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1253
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x23B872DD"
    },
    "1157": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1253
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1158": {
      "op": "POP"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1161": {
      "op": "ADD"
    },
    "1162": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1164": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1166": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1167": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1168": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1169": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "SUB",
      "path": "25"
    },
    "1170": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1171": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1173": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "DUP8",
      "path": "25"
    },
    "1174": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1175": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "1176": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1177": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1178": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1179": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4A3"
    },
    "1182": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1183": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1185": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1186": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1187": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1188": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "POP",
      "path": "25"
    },
    "1189": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "GAS",
      "path": "25"
    },
    "1190": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "CALL",
      "path": "25"
    },
    "1191": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1192": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1193": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1194": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x4B7"
    },
    "1197": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1198": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1199": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1201": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1202": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "1203": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1204": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1206": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1207": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1220,
        1285
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1208": {
      "op": "POP"
    },
    "1209": {
      "op": "POP"
    },
    "1210": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 5,
      "value": "0x40"
    },
    "1212": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1213": {
      "op": "PUSH4",
      "value": "0x1D4CB9CF"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1220": {
      "op": "SHL"
    },
    "1221": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1222": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1223": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1329,
        1339
      ],
      "op": "CALLER",
      "path": "25"
    },
    "1224": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1226": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1227": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "ADD",
      "path": "25"
    },
    "1228": {
      "op": "MSTORE"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1231": {
      "op": "DUP2"
    },
    "1232": {
      "op": "ADD"
    },
    "1233": {
      "op": "DUP7"
    },
    "1234": {
      "op": "SWAP1"
    },
    "1235": {
      "op": "MSTORE"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1238": {
      "op": "DUP2"
    },
    "1239": {
      "op": "ADD"
    },
    "1240": {
      "op": "DUP6"
    },
    "1241": {
      "op": "SWAP1"
    },
    "1242": {
      "op": "MSTORE"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1249": {
      "op": "SHL"
    },
    "1250": {
      "op": "SUB"
    },
    "1251": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1328
      ],
      "op": "DUP5",
      "path": "25"
    },
    "1252": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1328
      ],
      "op": "AND",
      "path": "25"
    },
    "1253": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1328
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1254": {
      "op": "POP"
    },
    "1255": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1328
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x3A99739E"
    },
    "1260": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1328
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1261": {
      "op": "POP"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1264": {
      "op": "ADD"
    },
    "1265": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1267": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1269": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1270": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1271": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1272": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "SUB",
      "path": "25"
    },
    "1273": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1274": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1276": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "DUP8",
      "path": "25"
    },
    "1277": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1278": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "1279": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1280": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1281": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1282": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x50A"
    },
    "1285": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1286": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1288": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1289": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1290": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1291": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "POP",
      "path": "25"
    },
    "1292": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "GAS",
      "path": "25"
    },
    "1293": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "CALL",
      "path": "25"
    },
    "1294": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1295": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1296": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1297": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x51E"
    },
    "1300": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1301": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1302": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1304": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1305": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "1306": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1307": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1309": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1310": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1295,
        1358
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1311": {
      "op": "POP"
    },
    "1312": {
      "op": "POP"
    },
    "1313": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1373,
        1423
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 6,
      "value": "0x40"
    },
    "1315": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1373,
        1423
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1316": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1373,
        1423
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1323": {
      "op": "SHL"
    },
    "1324": {
      "op": "SUB"
    },
    "1325": {
      "op": "DUP9"
    },
    "1326": {
      "op": "AND"
    },
    "1327": {
      "op": "DUP2"
    },
    "1328": {
      "op": "MSTORE"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1331": {
      "op": "DUP2"
    },
    "1332": {
      "op": "ADD"
    },
    "1333": {
      "op": "DUP8"
    },
    "1334": {
      "op": "SWAP1"
    },
    "1335": {
      "op": "MSTORE"
    },
    "1336": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1404,
        1414
      ],
      "op": "CALLER",
      "path": "25"
    },
    "1337": {
      "op": "SWAP2"
    },
    "1338": {
      "op": "DUP2"
    },
    "1339": {
      "op": "ADD"
    },
    "1340": {
      "op": "SWAP2"
    },
    "1341": {
      "op": "SWAP1"
    },
    "1342": {
      "op": "SWAP2"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1346": {
      "op": "DUP2"
    },
    "1347": {
      "op": "ADD"
    },
    "1348": {
      "op": "DUP6"
    },
    "1349": {
      "op": "SWAP1"
    },
    "1350": {
      "op": "MSTORE"
    },
    "1351": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1373,
        1423
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0xFE0FF3EBD717D5C975CBA5A8A1399A5530971996633841FF78361DF170F67D1A"
    },
    "1384": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1373,
        1423
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "1385": {
      "op": "POP"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1388": {
      "op": "ADD"
    },
    "1389": {
      "op": "SWAP1"
    },
    "1390": {
      "op": "POP"
    },
    "1391": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1373,
        1423
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1392": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1373,
        1423
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1394": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1373,
        1423
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1395": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1373,
        1423
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1396": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1373,
        1423
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1397": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1373,
        1423
      ],
      "op": "SUB",
      "path": "25"
    },
    "1398": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1373,
        1423
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1399": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        1373,
        1423
      ],
      "op": "LOG1",
      "path": "25"
    },
    "1400": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        927,
        1430
      ],
      "op": "POP",
      "path": "25"
    },
    "1401": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "POP",
      "path": "25"
    },
    "1402": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "POP",
      "path": "25"
    },
    "1403": {
      "fn": "NftMarketRouter.sellItem",
      "offset": [
        815,
        1430
      ],
      "op": "POP",
      "path": "25"
    },
    "1404": {
      "fn": "NftMarketRouter.sellItem",
      "jump": "o",
      "offset": [
        815,
        1430
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1405": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3022,
        3366
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1406": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1408": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1409": {
      "op": "PUSH4",
      "value": "0xD3C4501"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1418": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1425": {
      "op": "SHL"
    },
    "1426": {
      "op": "SUB"
    },
    "1427": {
      "op": "DUP5"
    },
    "1428": {
      "op": "DUP2"
    },
    "1429": {
      "op": "AND"
    },
    "1430": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1432": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1433": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "ADD",
      "path": "25"
    },
    "1434": {
      "op": "MSTORE"
    },
    "1435": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3151,
        3179
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x60"
    },
    "1437": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3151,
        3179
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1438": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3191,
        3204
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1440": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3191,
        3204
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1441": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3224,
        3231
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x0"
    },
    "1474": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3240
      ],
      "op": "AND",
      "path": "25"
    },
    "1475": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3240
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1476": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3240
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x1A788A02"
    },
    "1481": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3240
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1484": {
      "op": "ADD"
    },
    "1485": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1487": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1489": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1490": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1491": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1492": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "SUB",
      "path": "25"
    },
    "1493": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1494": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "DUP7",
      "path": "25"
    },
    "1495": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "GAS",
      "path": "25"
    },
    "1496": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "1497": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1498": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1499": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1500": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5E9"
    },
    "1503": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1504": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1505": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1507": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1508": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "1509": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1510": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1512": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1513": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1514": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "POP",
      "path": "25"
    },
    "1515": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "POP",
      "path": "25"
    },
    "1516": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "POP",
      "path": "25"
    },
    "1517": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "POP",
      "path": "25"
    },
    "1518": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1520": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1521": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1522": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "1524": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "NOT",
      "path": "25"
    },
    "1525": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "1527": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1528": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "ADD",
      "path": "25"
    },
    "1529": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "AND",
      "path": "25"
    },
    "1530": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1531": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "ADD",
      "path": "25"
    },
    "1532": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1533": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1535": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1536": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "POP",
      "path": "25"
    },
    "1537": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1538": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "ADD",
      "path": "25"
    },
    "1539": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1540": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x60D"
    },
    "1543": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1544": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1545": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE7F"
    },
    "1548": {
      "fn": "NftMarketRouter.getOrderPage",
      "jump": "i",
      "offset": [
        3207,
        3253
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1549": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3207,
        3253
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1550": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3318,
        3359
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 7,
      "value": "0x40"
    },
    "1552": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3318,
        3359
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1553": {
      "op": "PUSH3",
      "value": "0x63249F"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1559": {
      "op": "SHL"
    },
    "1560": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3318,
        3359
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1561": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3318,
        3359
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1562": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3318,
        3359
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1564": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3318,
        3359
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1565": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3318,
        3359
      ],
      "op": "ADD",
      "path": "25"
    },
    "1566": {
      "op": "DUP7"
    },
    "1567": {
      "op": "SWAP1"
    },
    "1568": {
      "op": "MSTORE"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1571": {
      "op": "DUP2"
    },
    "1572": {
      "op": "ADD"
    },
    "1573": {
      "op": "DUP6"
    },
    "1574": {
      "op": "SWAP1"
    },
    "1575": {
      "op": "MSTORE"
    },
    "1576": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3191,
        3253
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1577": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3191,
        3253
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1578": {
      "op": "POP"
    },
    "1579": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3191,
        3253
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1580": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3191,
        3253
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1587": {
      "op": "SHL"
    },
    "1588": {
      "op": "SUB"
    },
    "1589": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3318,
        3340
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1590": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3318,
        3340
      ],
      "op": "AND",
      "path": "25"
    },
    "1591": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3318,
        3340
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1592": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3318,
        3340
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x63249F00"
    },
    "1597": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3318,
        3340
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1600": {
      "op": "ADD"
    },
    "1601": {
      "fn": "NftMarketRouter.getOrderPage",
      "offset": [
        3318,
        3359
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x29D"
    },
    "1604": {
      "op": "JUMP"
    },
    "1605": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1606": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2582,
        2583
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 8,
      "value": "0x0"
    },
    "1608": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2573,
        2579
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1609": {
      "branch": 22,
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2573,
        2583
      ],
      "op": "GT",
      "path": "25"
    },
    "1610": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2565,
        2606
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x68A"
    },
    "1613": {
      "branch": 22,
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2565,
        2606
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1614": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2565,
        2606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1616": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2565,
        2606
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1617": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1623": {
      "op": "SHL"
    },
    "1624": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2565,
        2606
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1625": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2565,
        2606
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1628": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2565,
        2606
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1630": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2565,
        2606
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1631": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2565,
        2606
      ],
      "op": "ADD",
      "path": "25"
    },
    "1632": {
      "op": "MSTORE"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1637": {
      "op": "DUP3"
    },
    "1638": {
      "op": "ADD"
    },
    "1639": {
      "op": "MSTORE"
    },
    "1640": {
      "op": "PUSH18",
      "value": "0x526F757465723A70726963652077726F6E67"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1661": {
      "op": "SHL"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1664": {
      "op": "DUP3"
    },
    "1665": {
      "op": "ADD"
    },
    "1666": {
      "op": "MSTORE"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1669": {
      "op": "ADD"
    },
    "1670": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2565,
        2606
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x32D"
    },
    "1673": {
      "op": "JUMP"
    },
    "1674": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2565,
        2606
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1675": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1677": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1678": {
      "op": "PUSH4",
      "value": "0xD3C4501"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1685": {
      "op": "SHL"
    },
    "1686": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1687": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1694": {
      "op": "SHL"
    },
    "1695": {
      "op": "SUB"
    },
    "1696": {
      "op": "DUP5"
    },
    "1697": {
      "op": "DUP2"
    },
    "1698": {
      "op": "AND"
    },
    "1699": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1701": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1702": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "ADD",
      "path": "25"
    },
    "1703": {
      "op": "MSTORE"
    },
    "1704": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2616,
        2629
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1706": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2616,
        2629
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1707": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2649,
        2656
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x0"
    },
    "1740": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2665
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1741": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2665
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1742": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2665
      ],
      "op": "AND",
      "path": "25"
    },
    "1743": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2665
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1744": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2665
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x1A788A02"
    },
    "1749": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2665
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1752": {
      "op": "ADD"
    },
    "1753": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1755": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1757": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1758": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1759": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1760": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "SUB",
      "path": "25"
    },
    "1761": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1762": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "DUP7",
      "path": "25"
    },
    "1763": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "GAS",
      "path": "25"
    },
    "1764": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "1765": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1766": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1767": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1768": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x6F5"
    },
    "1771": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1772": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1773": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1775": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1776": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "1777": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1778": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1780": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1781": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1782": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "POP",
      "path": "25"
    },
    "1783": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "POP",
      "path": "25"
    },
    "1784": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "POP",
      "path": "25"
    },
    "1785": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "POP",
      "path": "25"
    },
    "1786": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1788": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1789": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1790": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "1792": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "NOT",
      "path": "25"
    },
    "1793": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "1795": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1796": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "ADD",
      "path": "25"
    },
    "1797": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "AND",
      "path": "25"
    },
    "1798": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1799": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "ADD",
      "path": "25"
    },
    "1800": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1801": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1803": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1804": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "POP",
      "path": "25"
    },
    "1805": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1806": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "ADD",
      "path": "25"
    },
    "1807": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1808": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x719"
    },
    "1811": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1812": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1813": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE7F"
    },
    "1816": {
      "fn": "NftMarketRouter.changePrice",
      "jump": "i",
      "offset": [
        2632,
        2678
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1817": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2632,
        2678
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1818": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2616,
        2678
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1819": {
      "op": "POP"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1826": {
      "op": "SHL"
    },
    "1827": {
      "op": "SUB"
    },
    "1828": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2696,
        2715
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 9
    },
    "1829": {
      "branch": 23,
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2696,
        2715
      ],
      "op": "AND",
      "path": "25"
    },
    "1830": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2688,
        2754
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x741"
    },
    "1833": {
      "branch": 23,
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2688,
        2754
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1834": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2688,
        2754
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1836": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2688,
        2754
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1837": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1843": {
      "op": "SHL"
    },
    "1844": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2688,
        2754
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1845": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2688,
        2754
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1846": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2688,
        2754
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1848": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2688,
        2754
      ],
      "op": "ADD",
      "path": "25"
    },
    "1849": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2688,
        2754
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x32D"
    },
    "1852": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2688,
        2754
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1853": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2688,
        2754
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1003"
    },
    "1856": {
      "fn": "NftMarketRouter.changePrice",
      "jump": "i",
      "offset": [
        2688,
        2754
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1857": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2688,
        2754
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1858": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 10,
      "value": "0x40"
    },
    "1860": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1861": {
      "op": "PUSH4",
      "value": "0x620D1B05"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1868": {
      "op": "SHL"
    },
    "1869": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1870": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1871": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1873": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1874": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "ADD",
      "path": "25"
    },
    "1875": {
      "op": "DUP5"
    },
    "1876": {
      "op": "SWAP1"
    },
    "1877": {
      "op": "MSTORE"
    },
    "1878": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2796,
        2801
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1879": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2796,
        2801
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1880": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2852,
        2862
      ],
      "op": "CALLER",
      "path": "25"
    },
    "1881": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2852,
        2862
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1888": {
      "op": "SHL"
    },
    "1889": {
      "op": "SUB"
    },
    "1890": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2838
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1891": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2838
      ],
      "op": "AND",
      "path": "25"
    },
    "1892": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2838
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1893": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2838
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xC41A360A"
    },
    "1898": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2838
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1901": {
      "op": "ADD"
    },
    "1902": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "1904": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1906": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1907": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1908": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "DUP4",
      "path": "25"
    },
    "1909": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "SUB",
      "path": "25"
    },
    "1910": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1911": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "DUP7",
      "path": "25"
    },
    "1912": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "GAS",
      "path": "25"
    },
    "1913": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "1914": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1915": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1916": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "1917": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x78A"
    },
    "1920": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1921": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1922": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1924": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1925": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "1926": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1927": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "1929": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "REVERT",
      "path": "25"
    },
    "1930": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1931": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "POP",
      "path": "25"
    },
    "1932": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "POP",
      "path": "25"
    },
    "1933": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "POP",
      "path": "25"
    },
    "1934": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "POP",
      "path": "25"
    },
    "1935": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1937": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1938": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "1939": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "1941": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "NOT",
      "path": "25"
    },
    "1942": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "1944": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1945": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "ADD",
      "path": "25"
    },
    "1946": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "AND",
      "path": "25"
    },
    "1947": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1948": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "ADD",
      "path": "25"
    },
    "1949": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "DUP1",
      "path": "25"
    },
    "1950": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1952": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1953": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "POP",
      "path": "25"
    },
    "1954": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1955": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "ADD",
      "path": "25"
    },
    "1956": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1957": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x7AE"
    },
    "1960": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "1961": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "1962": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE7F"
    },
    "1965": {
      "fn": "NftMarketRouter.changePrice",
      "jump": "i",
      "offset": [
        2820,
        2848
      ],
      "op": "JUMP",
      "path": "25"
    },
    "1966": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2848
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1973": {
      "op": "SHL"
    },
    "1974": {
      "op": "SUB"
    },
    "1975": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2862
      ],
      "op": "AND",
      "path": "25"
    },
    "1976": {
      "branch": 24,
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2820,
        2862
      ],
      "op": "EQ",
      "path": "25"
    },
    "1977": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2812,
        2883
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x7F7"
    },
    "1980": {
      "branch": 24,
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2812,
        2883
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "1981": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2812,
        2883
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "1983": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2812,
        2883
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "1984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1990": {
      "op": "SHL"
    },
    "1991": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2812,
        2883
      ],
      "op": "DUP2",
      "path": "25"
    },
    "1992": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2812,
        2883
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1995": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2812,
        2883
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "1997": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2812,
        2883
      ],
      "op": "DUP3",
      "path": "25"
    },
    "1998": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2812,
        2883
      ],
      "op": "ADD",
      "path": "25"
    },
    "1999": {
      "op": "MSTORE"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2004": {
      "op": "DUP3"
    },
    "2005": {
      "op": "ADD"
    },
    "2006": {
      "op": "MSTORE"
    },
    "2007": {
      "op": "PUSH16",
      "value": "0x2937BABA32B91D3737BA1037BBB732B9"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "2026": {
      "op": "SHL"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2029": {
      "op": "DUP3"
    },
    "2030": {
      "op": "ADD"
    },
    "2031": {
      "op": "MSTORE"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2034": {
      "op": "ADD"
    },
    "2035": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2812,
        2883
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x32D"
    },
    "2038": {
      "op": "JUMP"
    },
    "2039": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2812,
        2883
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2040": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 11,
      "value": "0x40"
    },
    "2042": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2043": {
      "op": "PUSH4",
      "value": "0x612DE9D"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2050": {
      "op": "SHL"
    },
    "2051": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2052": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2053": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2055": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2056": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "ADD",
      "path": "25"
    },
    "2057": {
      "op": "DUP6"
    },
    "2058": {
      "op": "SWAP1"
    },
    "2059": {
      "op": "MSTORE"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2062": {
      "op": "DUP2"
    },
    "2063": {
      "op": "ADD"
    },
    "2064": {
      "op": "DUP5"
    },
    "2065": {
      "op": "SWAP1"
    },
    "2066": {
      "op": "MSTORE"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2073": {
      "op": "SHL"
    },
    "2074": {
      "op": "SUB"
    },
    "2075": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2922
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2076": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2922
      ],
      "op": "AND",
      "path": "25"
    },
    "2077": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2922
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2078": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2922
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xC25BD3A"
    },
    "2083": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2922
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2089": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2091": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2092": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2093": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2094": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "SUB",
      "path": "25"
    },
    "2095": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2096": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2098": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "DUP8",
      "path": "25"
    },
    "2099": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2100": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "2101": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2102": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2103": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2104": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x840"
    },
    "2107": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2108": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2110": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2111": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2112": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2113": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "POP",
      "path": "25"
    },
    "2114": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "GAS",
      "path": "25"
    },
    "2115": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "CALL",
      "path": "25"
    },
    "2116": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2117": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2118": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2119": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x854"
    },
    "2122": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2123": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2124": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2126": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2127": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "2128": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2129": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2131": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2132": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2893,
        2940
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2133": {
      "op": "POP"
    },
    "2134": {
      "op": "POP"
    },
    "2135": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2955,
        3009
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 12,
      "value": "0x40"
    },
    "2137": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2955,
        3009
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2138": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2955,
        3009
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2145": {
      "op": "SHL"
    },
    "2146": {
      "op": "SUB"
    },
    "2147": {
      "op": "DUP10"
    },
    "2148": {
      "op": "AND"
    },
    "2149": {
      "op": "DUP2"
    },
    "2150": {
      "op": "MSTORE"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2153": {
      "op": "DUP2"
    },
    "2154": {
      "op": "ADD"
    },
    "2155": {
      "op": "DUP9"
    },
    "2156": {
      "op": "SWAP1"
    },
    "2157": {
      "op": "MSTORE"
    },
    "2158": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2990,
        3000
      ],
      "op": "CALLER",
      "path": "25"
    },
    "2159": {
      "op": "SWAP2"
    },
    "2160": {
      "op": "DUP2"
    },
    "2161": {
      "op": "ADD"
    },
    "2162": {
      "op": "SWAP2"
    },
    "2163": {
      "op": "SWAP1"
    },
    "2164": {
      "op": "SWAP2"
    },
    "2165": {
      "op": "MSTORE"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2168": {
      "op": "DUP2"
    },
    "2169": {
      "op": "ADD"
    },
    "2170": {
      "op": "DUP7"
    },
    "2171": {
      "op": "SWAP1"
    },
    "2172": {
      "op": "MSTORE"
    },
    "2173": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2955,
        3009
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x51291DEB226D868906FD083064FBC9F614821B436C458D9095C9EAE480812580"
    },
    "2206": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2955,
        3009
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "2207": {
      "op": "POP"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2210": {
      "op": "ADD"
    },
    "2211": {
      "op": "SWAP1"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2955,
        3009
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2214": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2955,
        3009
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2216": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2955,
        3009
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2217": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2955,
        3009
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2218": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2955,
        3009
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2219": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2955,
        3009
      ],
      "op": "SUB",
      "path": "25"
    },
    "2220": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2955,
        3009
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2221": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2955,
        3009
      ],
      "op": "LOG1",
      "path": "25"
    },
    "2222": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2555,
        3016
      ],
      "op": "POP",
      "path": "25"
    },
    "2223": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2555,
        3016
      ],
      "op": "POP",
      "path": "25"
    },
    "2224": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "POP",
      "path": "25"
    },
    "2225": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "POP",
      "path": "25"
    },
    "2226": {
      "fn": "NftMarketRouter.changePrice",
      "offset": [
        2440,
        3016
      ],
      "op": "POP",
      "path": "25"
    },
    "2227": {
      "fn": "NftMarketRouter.changePrice",
      "jump": "o",
      "offset": [
        2440,
        3016
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2228": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        1978,
        2434
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2229": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2231": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2232": {
      "op": "PUSH4",
      "value": "0xD3C4501"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2239": {
      "op": "SHL"
    },
    "2240": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2241": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2248": {
      "op": "SHL"
    },
    "2249": {
      "op": "SUB"
    },
    "2250": {
      "op": "DUP4"
    },
    "2251": {
      "op": "DUP2"
    },
    "2252": {
      "op": "AND"
    },
    "2253": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2255": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2256": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "ADD",
      "path": "25"
    },
    "2257": {
      "op": "MSTORE"
    },
    "2258": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2056,
        2069
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2260": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2056,
        2069
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2261": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2089,
        2096
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x0"
    },
    "2294": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2105
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2295": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2105
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2296": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2105
      ],
      "op": "AND",
      "path": "25"
    },
    "2297": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2105
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2298": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2105
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x1A788A02"
    },
    "2303": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2105
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2306": {
      "op": "ADD"
    },
    "2307": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2309": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2311": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2312": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2313": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2314": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "SUB",
      "path": "25"
    },
    "2315": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2316": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "DUP7",
      "path": "25"
    },
    "2317": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "GAS",
      "path": "25"
    },
    "2318": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "2319": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2320": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2321": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2322": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x91F"
    },
    "2325": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2326": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2327": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2329": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2330": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "2331": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2332": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2334": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2335": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2336": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "POP",
      "path": "25"
    },
    "2337": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "POP",
      "path": "25"
    },
    "2338": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "POP",
      "path": "25"
    },
    "2339": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "POP",
      "path": "25"
    },
    "2340": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2342": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2343": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2344": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "2346": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "NOT",
      "path": "25"
    },
    "2347": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "2349": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2350": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "ADD",
      "path": "25"
    },
    "2351": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "AND",
      "path": "25"
    },
    "2352": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2353": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "ADD",
      "path": "25"
    },
    "2354": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2355": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2357": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2358": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "POP",
      "path": "25"
    },
    "2359": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2360": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "ADD",
      "path": "25"
    },
    "2361": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2362": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x943"
    },
    "2365": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2366": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2367": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE7F"
    },
    "2370": {
      "fn": "NftMarketRouter.cancelItem",
      "jump": "i",
      "offset": [
        2072,
        2118
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2371": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2072,
        2118
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2372": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2056,
        2118
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2373": {
      "op": "POP"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2380": {
      "op": "SHL"
    },
    "2381": {
      "op": "SUB"
    },
    "2382": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2136,
        2155
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 13
    },
    "2383": {
      "branch": 25,
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2136,
        2155
      ],
      "op": "AND",
      "path": "25"
    },
    "2384": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2128,
        2194
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x96B"
    },
    "2387": {
      "branch": 25,
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2128,
        2194
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2388": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2128,
        2194
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2390": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2128,
        2194
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2391": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2397": {
      "op": "SHL"
    },
    "2398": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2128,
        2194
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2399": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2128,
        2194
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2400": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2128,
        2194
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2402": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2128,
        2194
      ],
      "op": "ADD",
      "path": "25"
    },
    "2403": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2128,
        2194
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x32D"
    },
    "2406": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2128,
        2194
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2407": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2128,
        2194
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1003"
    },
    "2410": {
      "fn": "NftMarketRouter.cancelItem",
      "jump": "i",
      "offset": [
        2128,
        2194
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2411": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2128,
        2194
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2412": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 14,
      "value": "0x40"
    },
    "2414": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2415": {
      "op": "PUSH4",
      "value": "0x620D1B05"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2422": {
      "op": "SHL"
    },
    "2423": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2424": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2425": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2427": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2428": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "ADD",
      "path": "25"
    },
    "2429": {
      "op": "DUP4"
    },
    "2430": {
      "op": "SWAP1"
    },
    "2431": {
      "op": "MSTORE"
    },
    "2432": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2236,
        2241
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2433": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2236,
        2241
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2434": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2292,
        2302
      ],
      "op": "CALLER",
      "path": "25"
    },
    "2435": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2292,
        2302
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2442": {
      "op": "SHL"
    },
    "2443": {
      "op": "SUB"
    },
    "2444": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2278
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2445": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2278
      ],
      "op": "AND",
      "path": "25"
    },
    "2446": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2278
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2447": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2278
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xC41A360A"
    },
    "2452": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2278
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2455": {
      "op": "ADD"
    },
    "2456": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2458": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2460": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2461": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2462": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2463": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "SUB",
      "path": "25"
    },
    "2464": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2465": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "DUP7",
      "path": "25"
    },
    "2466": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "GAS",
      "path": "25"
    },
    "2467": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "2468": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2469": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2470": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2471": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9B4"
    },
    "2474": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2475": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2476": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2478": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2479": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "2480": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2481": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2483": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2484": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2485": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "POP",
      "path": "25"
    },
    "2486": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "POP",
      "path": "25"
    },
    "2487": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "POP",
      "path": "25"
    },
    "2488": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "POP",
      "path": "25"
    },
    "2489": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2491": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2492": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2493": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "2495": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "NOT",
      "path": "25"
    },
    "2496": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "2498": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2499": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "ADD",
      "path": "25"
    },
    "2500": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "AND",
      "path": "25"
    },
    "2501": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2502": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "ADD",
      "path": "25"
    },
    "2503": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2504": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2506": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2507": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "POP",
      "path": "25"
    },
    "2508": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2509": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "ADD",
      "path": "25"
    },
    "2510": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2511": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9D8"
    },
    "2514": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2515": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2516": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE7F"
    },
    "2519": {
      "fn": "NftMarketRouter.cancelItem",
      "jump": "i",
      "offset": [
        2260,
        2288
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2520": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2288
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2527": {
      "op": "SHL"
    },
    "2528": {
      "op": "SUB"
    },
    "2529": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2302
      ],
      "op": "AND",
      "path": "25"
    },
    "2530": {
      "branch": 26,
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2260,
        2302
      ],
      "op": "EQ",
      "path": "25"
    },
    "2531": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2252,
        2323
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA21"
    },
    "2534": {
      "branch": 26,
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2252,
        2323
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2535": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2252,
        2323
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2537": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2252,
        2323
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2538": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2544": {
      "op": "SHL"
    },
    "2545": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2252,
        2323
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2546": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2252,
        2323
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2549": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2252,
        2323
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2551": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2252,
        2323
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2552": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2252,
        2323
      ],
      "op": "ADD",
      "path": "25"
    },
    "2553": {
      "op": "MSTORE"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2558": {
      "op": "DUP3"
    },
    "2559": {
      "op": "ADD"
    },
    "2560": {
      "op": "MSTORE"
    },
    "2561": {
      "op": "PUSH16",
      "value": "0x2937BABA32B91D3737BA1037BBB732B9"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "2580": {
      "op": "SHL"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2583": {
      "op": "DUP3"
    },
    "2584": {
      "op": "ADD"
    },
    "2585": {
      "op": "MSTORE"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2588": {
      "op": "ADD"
    },
    "2589": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2252,
        2323
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x32D"
    },
    "2592": {
      "op": "JUMP"
    },
    "2593": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2252,
        2323
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2594": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 15,
      "value": "0x40"
    },
    "2596": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2597": {
      "op": "PUSH4",
      "value": "0xDDD637C9"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2604": {
      "op": "SHL"
    },
    "2605": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2606": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2607": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2609": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2610": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "ADD",
      "path": "25"
    },
    "2611": {
      "op": "DUP5"
    },
    "2612": {
      "op": "SWAP1"
    },
    "2613": {
      "op": "MSTORE"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2620": {
      "op": "SHL"
    },
    "2621": {
      "op": "SUB"
    },
    "2622": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2361
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2623": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2361
      ],
      "op": "AND",
      "path": "25"
    },
    "2624": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2361
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2625": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2361
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xDDD637C9"
    },
    "2630": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2361
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2633": {
      "op": "ADD"
    },
    "2634": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2636": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2638": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2639": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2640": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2641": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "SUB",
      "path": "25"
    },
    "2642": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2643": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2645": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "DUP8",
      "path": "25"
    },
    "2646": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2647": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "2648": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2649": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2650": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2651": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA63"
    },
    "2654": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2655": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2657": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2658": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2659": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2660": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "POP",
      "path": "25"
    },
    "2661": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "GAS",
      "path": "25"
    },
    "2662": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "CALL",
      "path": "25"
    },
    "2663": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2664": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2665": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2666": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xA77"
    },
    "2669": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2670": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2671": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2673": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2674": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "2675": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2676": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2678": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2679": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2333,
        2371
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2680": {
      "op": "POP"
    },
    "2681": {
      "op": "POP"
    },
    "2682": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2386,
        2427
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 16,
      "value": "0x40"
    },
    "2684": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2386,
        2427
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2685": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2386,
        2427
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2692": {
      "op": "SHL"
    },
    "2693": {
      "op": "SUB"
    },
    "2694": {
      "op": "DUP9"
    },
    "2695": {
      "op": "AND"
    },
    "2696": {
      "op": "DUP2"
    },
    "2697": {
      "op": "MSTORE"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2700": {
      "op": "DUP2"
    },
    "2701": {
      "op": "ADD"
    },
    "2702": {
      "op": "DUP8"
    },
    "2703": {
      "op": "SWAP1"
    },
    "2704": {
      "op": "MSTORE"
    },
    "2705": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2416,
        2426
      ],
      "op": "CALLER",
      "path": "25"
    },
    "2706": {
      "op": "SWAP2"
    },
    "2707": {
      "op": "DUP2"
    },
    "2708": {
      "op": "ADD"
    },
    "2709": {
      "op": "SWAP2"
    },
    "2710": {
      "op": "SWAP1"
    },
    "2711": {
      "op": "SWAP2"
    },
    "2712": {
      "op": "MSTORE"
    },
    "2713": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2386,
        2427
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x9EA4986863FC3DD36F15C8E76CECF44F311C121DC511EA352087A3E351B27EC9"
    },
    "2746": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2386,
        2427
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "2747": {
      "op": "POP"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2750": {
      "op": "ADD"
    },
    "2751": {
      "op": "SWAP1"
    },
    "2752": {
      "op": "POP"
    },
    "2753": {
      "fn": "NftMarketRouter.cancelItem",
      "offset": [
        2386,
        2427
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x56F"
    },
    "2756": {
      "op": "JUMP"
    },
    "2757": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1436,
        1972
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2758": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2760": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2761": {
      "op": "PUSH4",
      "value": "0xD3C4501"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2768": {
      "op": "SHL"
    },
    "2769": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2770": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2777": {
      "op": "SHL"
    },
    "2778": {
      "op": "SUB"
    },
    "2779": {
      "op": "DUP4"
    },
    "2780": {
      "op": "DUP2"
    },
    "2781": {
      "op": "AND"
    },
    "2782": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2784": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2785": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "ADD",
      "path": "25"
    },
    "2786": {
      "op": "MSTORE"
    },
    "2787": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1519,
        1532
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2789": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1519,
        1532
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2790": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1552,
        1559
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x0"
    },
    "2823": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1568
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2824": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1568
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2825": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1568
      ],
      "op": "AND",
      "path": "25"
    },
    "2826": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1568
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2827": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1568
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x1A788A02"
    },
    "2832": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1568
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2835": {
      "op": "ADD"
    },
    "2836": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2838": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2840": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2841": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2842": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2843": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "SUB",
      "path": "25"
    },
    "2844": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2845": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "DUP7",
      "path": "25"
    },
    "2846": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "GAS",
      "path": "25"
    },
    "2847": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "2848": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2849": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2850": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2851": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB30"
    },
    "2854": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2855": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2856": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2858": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2859": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "2860": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2861": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2863": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2864": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2865": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "POP",
      "path": "25"
    },
    "2866": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "POP",
      "path": "25"
    },
    "2867": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "POP",
      "path": "25"
    },
    "2868": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "POP",
      "path": "25"
    },
    "2869": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2871": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2872": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "2873": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "2875": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "NOT",
      "path": "25"
    },
    "2876": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "2878": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2879": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "ADD",
      "path": "25"
    },
    "2880": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "AND",
      "path": "25"
    },
    "2881": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2882": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "ADD",
      "path": "25"
    },
    "2883": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2884": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2886": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2887": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "POP",
      "path": "25"
    },
    "2888": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2889": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "ADD",
      "path": "25"
    },
    "2890": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2891": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB54"
    },
    "2894": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2895": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2896": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE7F"
    },
    "2899": {
      "fn": "NftMarketRouter.buyItem",
      "jump": "i",
      "offset": [
        1535,
        1581
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2900": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1535,
        1581
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2901": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1519,
        1581
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2902": {
      "op": "POP"
    },
    "2903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2909": {
      "op": "SHL"
    },
    "2910": {
      "op": "SUB"
    },
    "2911": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1599,
        1618
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 17
    },
    "2912": {
      "branch": 27,
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1599,
        1618
      ],
      "op": "AND",
      "path": "25"
    },
    "2913": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1591,
        1657
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB7C"
    },
    "2916": {
      "branch": 27,
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1591,
        1657
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2917": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1591,
        1657
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2919": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1591,
        1657
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2920": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2926": {
      "op": "SHL"
    },
    "2927": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1591,
        1657
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2928": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1591,
        1657
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2929": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1591,
        1657
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2931": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1591,
        1657
      ],
      "op": "ADD",
      "path": "25"
    },
    "2932": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1591,
        1657
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x32D"
    },
    "2935": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1591,
        1657
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2936": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1591,
        1657
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1003"
    },
    "2939": {
      "fn": "NftMarketRouter.buyItem",
      "jump": "i",
      "offset": [
        1591,
        1657
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2940": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1591,
        1657
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2941": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 18,
      "value": "0x40"
    },
    "2943": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2944": {
      "op": "PUSH4",
      "value": "0xD09EF241"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2951": {
      "op": "SHL"
    },
    "2952": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2953": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2954": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2956": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2957": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "ADD",
      "path": "25"
    },
    "2958": {
      "op": "DUP4"
    },
    "2959": {
      "op": "SWAP1"
    },
    "2960": {
      "op": "MSTORE"
    },
    "2961": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1699,
        1704
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2962": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1699,
        1704
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2963": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1762,
        1771
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "2964": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1762,
        1771
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2971": {
      "op": "SHL"
    },
    "2972": {
      "op": "SUB"
    },
    "2973": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1742
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2974": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1742
      ],
      "op": "AND",
      "path": "25"
    },
    "2975": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1742
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2976": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1742
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xD09EF241"
    },
    "2981": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1742
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2984": {
      "op": "ADD"
    },
    "2985": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "2987": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2989": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2990": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2991": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2992": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "SUB",
      "path": "25"
    },
    "2993": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2994": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "DUP7",
      "path": "25"
    },
    "2995": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "GAS",
      "path": "25"
    },
    "2996": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "STATICCALL",
      "path": "25"
    },
    "2997": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2998": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2999": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3000": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xBC5"
    },
    "3003": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3004": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "3005": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3007": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3008": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "3009": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "3010": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3012": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3013": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3014": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "POP",
      "path": "25"
    },
    "3015": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "POP",
      "path": "25"
    },
    "3016": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "POP",
      "path": "25"
    },
    "3017": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "POP",
      "path": "25"
    },
    "3018": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3020": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3021": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "3022": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "3024": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "NOT",
      "path": "25"
    },
    "3025": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "3027": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3028": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "ADD",
      "path": "25"
    },
    "3029": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "AND",
      "path": "25"
    },
    "3030": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3031": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "ADD",
      "path": "25"
    },
    "3032": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3033": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3035": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3036": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "POP",
      "path": "25"
    },
    "3037": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3038": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "ADD",
      "path": "25"
    },
    "3039": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3040": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xBE9"
    },
    "3043": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3044": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3045": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1045"
    },
    "3048": {
      "fn": "NftMarketRouter.buyItem",
      "jump": "i",
      "offset": [
        1724,
        1752
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3049": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1752
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3050": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1758
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3052": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1758
      ],
      "op": "ADD",
      "path": "25"
    },
    "3053": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1758
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3054": {
      "branch": 28,
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1724,
        1771
      ],
      "op": "EQ",
      "path": "25"
    },
    "3055": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1716,
        1798
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xC33"
    },
    "3058": {
      "branch": 28,
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1716,
        1798
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3059": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1716,
        1798
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3061": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1716,
        1798
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3062": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3068": {
      "op": "SHL"
    },
    "3069": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1716,
        1798
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3070": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1716,
        1798
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3073": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1716,
        1798
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3075": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1716,
        1798
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3076": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1716,
        1798
      ],
      "op": "ADD",
      "path": "25"
    },
    "3077": {
      "op": "MSTORE"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3082": {
      "op": "DUP3"
    },
    "3083": {
      "op": "ADD"
    },
    "3084": {
      "op": "MSTORE"
    },
    "3085": {
      "op": "PUSH22",
      "value": "0x526F757465723A2076616C75652069732077726F6E67"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3110": {
      "op": "SHL"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3113": {
      "op": "DUP3"
    },
    "3114": {
      "op": "ADD"
    },
    "3115": {
      "op": "MSTORE"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3118": {
      "op": "ADD"
    },
    "3119": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1716,
        1798
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x32D"
    },
    "3122": {
      "op": "JUMP"
    },
    "3123": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1716,
        1798
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3124": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3126": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3127": {
      "op": "PUSH4",
      "value": "0xC0ADEC3B"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3134": {
      "op": "SHL"
    },
    "3135": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3136": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3137": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1869,
        1879
      ],
      "op": "CALLER",
      "path": "25"
    },
    "3138": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3140": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3141": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "ADD",
      "path": "25"
    },
    "3142": {
      "op": "MSTORE"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3145": {
      "op": "DUP2"
    },
    "3146": {
      "op": "ADD"
    },
    "3147": {
      "op": "DUP5"
    },
    "3148": {
      "op": "SWAP1"
    },
    "3149": {
      "op": "MSTORE"
    },
    "3150": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1808,
        1822
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3152": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1808,
        1822
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3159": {
      "op": "SHL"
    },
    "3160": {
      "op": "SUB"
    },
    "3161": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1850
      ],
      "op": "DUP4",
      "path": "25"
    },
    "3162": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1850
      ],
      "op": "AND",
      "path": "25"
    },
    "3163": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1850
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3164": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1850
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xC0ADEC3B"
    },
    "3169": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1850
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3170": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1858,
        1867
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3171": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1858,
        1867
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3174": {
      "op": "ADD"
    },
    "3175": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3177": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3179": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3180": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3181": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "DUP4",
      "path": "25"
    },
    "3182": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "SUB",
      "path": "25"
    },
    "3183": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3184": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "DUP6",
      "path": "25"
    },
    "3185": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "DUP9",
      "path": "25"
    },
    "3186": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "GAS",
      "path": "25"
    },
    "3187": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "CALL",
      "path": "25"
    },
    "3188": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3189": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3190": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3191": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xC84"
    },
    "3194": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3195": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "3196": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3198": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3199": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "3200": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "3201": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3203": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3204": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3205": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "POP",
      "path": "25"
    },
    "3206": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "POP",
      "path": "25"
    },
    "3207": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "POP",
      "path": "25"
    },
    "3208": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "POP",
      "path": "25"
    },
    "3209": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "POP",
      "path": "25"
    },
    "3210": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3212": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3213": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "3214": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "3216": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "NOT",
      "path": "25"
    },
    "3217": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "3219": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3220": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "ADD",
      "path": "25"
    },
    "3221": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "AND",
      "path": "25"
    },
    "3222": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3223": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "ADD",
      "path": "25"
    },
    "3224": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3225": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3227": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3228": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "POP",
      "path": "25"
    },
    "3229": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3230": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "ADD",
      "path": "25"
    },
    "3231": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3232": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xCA9"
    },
    "3235": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3236": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3237": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xE7F"
    },
    "3240": {
      "fn": "NftMarketRouter.buyItem",
      "jump": "i",
      "offset": [
        1825,
        1890
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3241": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1825,
        1890
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3242": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1905,
        1965
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 19,
      "value": "0x40"
    },
    "3244": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1905,
        1965
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3245": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1905,
        1965
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3252": {
      "op": "SHL"
    },
    "3253": {
      "op": "SUB"
    },
    "3254": {
      "op": "DUP1"
    },
    "3255": {
      "op": "DUP10"
    },
    "3256": {
      "op": "AND"
    },
    "3257": {
      "op": "DUP3"
    },
    "3258": {
      "op": "MSTORE"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3261": {
      "op": "DUP3"
    },
    "3262": {
      "op": "ADD"
    },
    "3263": {
      "op": "DUP9"
    },
    "3264": {
      "op": "SWAP1"
    },
    "3265": {
      "op": "MSTORE"
    },
    "3266": {
      "op": "DUP4"
    },
    "3267": {
      "op": "AND"
    },
    "3268": {
      "op": "SWAP2"
    },
    "3269": {
      "op": "DUP2"
    },
    "3270": {
      "op": "ADD"
    },
    "3271": {
      "op": "SWAP2"
    },
    "3272": {
      "op": "SWAP1"
    },
    "3273": {
      "op": "SWAP2"
    },
    "3274": {
      "op": "MSTORE"
    },
    "3275": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1943,
        1953
      ],
      "op": "CALLER",
      "path": "25"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3278": {
      "op": "DUP3"
    },
    "3279": {
      "op": "ADD"
    },
    "3280": {
      "op": "MSTORE"
    },
    "3281": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1955,
        1964
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3284": {
      "op": "DUP3"
    },
    "3285": {
      "op": "ADD"
    },
    "3286": {
      "op": "MSTORE"
    },
    "3287": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1808,
        1890
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3288": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1808,
        1890
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3289": {
      "op": "POP"
    },
    "3290": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1905,
        1965
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0xC026FCB20FC66E2E9C95089DB72B3B02425AA6B6449C45EE7735C5093B3700A6"
    },
    "3323": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1905,
        1965
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3326": {
      "op": "ADD"
    },
    "3327": {
      "fn": "NftMarketRouter.buyItem",
      "offset": [
        1905,
        1965
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x8A5"
    },
    "3330": {
      "op": "JUMP"
    },
    "3331": {
      "op": "JUMPDEST"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3338": {
      "op": "SHL"
    },
    "3339": {
      "op": "SUB"
    },
    "3340": {
      "op": "DUP2"
    },
    "3341": {
      "op": "AND"
    },
    "3342": {
      "op": "DUP2"
    },
    "3343": {
      "op": "EQ"
    },
    "3344": {
      "op": "PUSH2",
      "value": "0xD18"
    },
    "3347": {
      "op": "JUMPI"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3350": {
      "op": "DUP1"
    },
    "3351": {
      "op": "REVERT"
    },
    "3352": {
      "op": "JUMPDEST"
    },
    "3353": {
      "op": "POP"
    },
    "3354": {
      "jump": "o",
      "op": "JUMP"
    },
    "3355": {
      "op": "JUMPDEST"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3358": {
      "op": "DUP1"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3361": {
      "op": "DUP1"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3366": {
      "op": "DUP7"
    },
    "3367": {
      "op": "DUP9"
    },
    "3368": {
      "op": "SUB"
    },
    "3369": {
      "op": "SLT"
    },
    "3370": {
      "op": "ISZERO"
    },
    "3371": {
      "op": "PUSH2",
      "value": "0xD33"
    },
    "3374": {
      "op": "JUMPI"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3377": {
      "op": "DUP1"
    },
    "3378": {
      "op": "REVERT"
    },
    "3379": {
      "op": "JUMPDEST"
    },
    "3380": {
      "op": "DUP6"
    },
    "3381": {
      "op": "CALLDATALOAD"
    },
    "3382": {
      "op": "PUSH2",
      "value": "0xD3E"
    },
    "3385": {
      "op": "DUP2"
    },
    "3386": {
      "op": "PUSH2",
      "value": "0xD03"
    },
    "3389": {
      "jump": "i",
      "op": "JUMP"
    },
    "3390": {
      "op": "JUMPDEST"
    },
    "3391": {
      "op": "SWAP5"
    },
    "3392": {
      "op": "POP"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3395": {
      "op": "DUP7"
    },
    "3396": {
      "op": "ADD"
    },
    "3397": {
      "op": "CALLDATALOAD"
    },
    "3398": {
      "op": "PUSH2",
      "value": "0xD4E"
    },
    "3401": {
      "op": "DUP2"
    },
    "3402": {
      "op": "PUSH2",
      "value": "0xD03"
    },
    "3405": {
      "jump": "i",
      "op": "JUMP"
    },
    "3406": {
      "op": "JUMPDEST"
    },
    "3407": {
      "op": "SWAP4"
    },
    "3408": {
      "op": "POP"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3411": {
      "op": "DUP7"
    },
    "3412": {
      "op": "ADD"
    },
    "3413": {
      "op": "CALLDATALOAD"
    },
    "3414": {
      "op": "SWAP3"
    },
    "3415": {
      "op": "POP"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3418": {
      "op": "DUP7"
    },
    "3419": {
      "op": "ADD"
    },
    "3420": {
      "op": "CALLDATALOAD"
    },
    "3421": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3430": {
      "op": "DUP1"
    },
    "3431": {
      "op": "DUP3"
    },
    "3432": {
      "op": "GT"
    },
    "3433": {
      "op": "ISZERO"
    },
    "3434": {
      "op": "PUSH2",
      "value": "0xD72"
    },
    "3437": {
      "op": "JUMPI"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3440": {
      "op": "DUP1"
    },
    "3441": {
      "op": "REVERT"
    },
    "3442": {
      "op": "JUMPDEST"
    },
    "3443": {
      "op": "DUP2"
    },
    "3444": {
      "op": "DUP9"
    },
    "3445": {
      "op": "ADD"
    },
    "3446": {
      "op": "SWAP2"
    },
    "3447": {
      "op": "POP"
    },
    "3448": {
      "op": "DUP9"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3451": {
      "op": "DUP4"
    },
    "3452": {
      "op": "ADD"
    },
    "3453": {
      "op": "SLT"
    },
    "3454": {
      "op": "PUSH2",
      "value": "0xD86"
    },
    "3457": {
      "op": "JUMPI"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3460": {
      "op": "DUP1"
    },
    "3461": {
      "op": "REVERT"
    },
    "3462": {
      "op": "JUMPDEST"
    },
    "3463": {
      "op": "DUP2"
    },
    "3464": {
      "op": "CALLDATALOAD"
    },
    "3465": {
      "op": "DUP2"
    },
    "3466": {
      "op": "DUP2"
    },
    "3467": {
      "op": "GT"
    },
    "3468": {
      "op": "ISZERO"
    },
    "3469": {
      "op": "PUSH2",
      "value": "0xD95"
    },
    "3472": {
      "op": "JUMPI"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3475": {
      "op": "DUP1"
    },
    "3476": {
      "op": "REVERT"
    },
    "3477": {
      "op": "JUMPDEST"
    },
    "3478": {
      "op": "DUP10"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3481": {
      "op": "DUP3"
    },
    "3482": {
      "op": "DUP6"
    },
    "3483": {
      "op": "ADD"
    },
    "3484": {
      "op": "ADD"
    },
    "3485": {
      "op": "GT"
    },
    "3486": {
      "op": "ISZERO"
    },
    "3487": {
      "op": "PUSH2",
      "value": "0xDA7"
    },
    "3490": {
      "op": "JUMPI"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3493": {
      "op": "DUP1"
    },
    "3494": {
      "op": "REVERT"
    },
    "3495": {
      "op": "JUMPDEST"
    },
    "3496": {
      "op": "SWAP7"
    },
    "3497": {
      "op": "SWAP10"
    },
    "3498": {
      "op": "SWAP6"
    },
    "3499": {
      "op": "SWAP9"
    },
    "3500": {
      "op": "POP"
    },
    "3501": {
      "op": "SWAP4"
    },
    "3502": {
      "op": "SWAP7"
    },
    "3503": {
      "op": "POP"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3506": {
      "op": "ADD"
    },
    "3507": {
      "op": "SWAP5"
    },
    "3508": {
      "op": "SWAP4"
    },
    "3509": {
      "op": "SWAP3"
    },
    "3510": {
      "op": "POP"
    },
    "3511": {
      "op": "POP"
    },
    "3512": {
      "op": "POP"
    },
    "3513": {
      "jump": "o",
      "op": "JUMP"
    },
    "3514": {
      "op": "JUMPDEST"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3517": {
      "op": "DUP1"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3522": {
      "op": "DUP5"
    },
    "3523": {
      "op": "DUP7"
    },
    "3524": {
      "op": "SUB"
    },
    "3525": {
      "op": "SLT"
    },
    "3526": {
      "op": "ISZERO"
    },
    "3527": {
      "op": "PUSH2",
      "value": "0xDCF"
    },
    "3530": {
      "op": "JUMPI"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3533": {
      "op": "DUP1"
    },
    "3534": {
      "op": "REVERT"
    },
    "3535": {
      "op": "JUMPDEST"
    },
    "3536": {
      "op": "DUP4"
    },
    "3537": {
      "op": "CALLDATALOAD"
    },
    "3538": {
      "op": "PUSH2",
      "value": "0xDDA"
    },
    "3541": {
      "op": "DUP2"
    },
    "3542": {
      "op": "PUSH2",
      "value": "0xD03"
    },
    "3545": {
      "jump": "i",
      "op": "JUMP"
    },
    "3546": {
      "op": "JUMPDEST"
    },
    "3547": {
      "op": "SWAP6"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3550": {
      "op": "DUP6"
    },
    "3551": {
      "op": "ADD"
    },
    "3552": {
      "op": "CALLDATALOAD"
    },
    "3553": {
      "op": "SWAP6"
    },
    "3554": {
      "op": "POP"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3557": {
      "op": "SWAP1"
    },
    "3558": {
      "op": "SWAP5"
    },
    "3559": {
      "op": "ADD"
    },
    "3560": {
      "op": "CALLDATALOAD"
    },
    "3561": {
      "op": "SWAP4"
    },
    "3562": {
      "op": "SWAP3"
    },
    "3563": {
      "op": "POP"
    },
    "3564": {
      "op": "POP"
    },
    "3565": {
      "op": "POP"
    },
    "3566": {
      "jump": "o",
      "op": "JUMP"
    },
    "3567": {
      "op": "JUMPDEST"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3570": {
      "op": "DUP1"
    },
    "3571": {
      "op": "DUP3"
    },
    "3572": {
      "op": "MSTORE"
    },
    "3573": {
      "op": "DUP3"
    },
    "3574": {
      "op": "MLOAD"
    },
    "3575": {
      "op": "DUP3"
    },
    "3576": {
      "op": "DUP3"
    },
    "3577": {
      "op": "ADD"
    },
    "3578": {
      "op": "DUP2"
    },
    "3579": {
      "op": "SWAP1"
    },
    "3580": {
      "op": "MSTORE"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3583": {
      "op": "SWAP2"
    },
    "3584": {
      "op": "SWAP1"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3587": {
      "op": "SWAP1"
    },
    "3588": {
      "op": "DUP2"
    },
    "3589": {
      "op": "DUP6"
    },
    "3590": {
      "op": "ADD"
    },
    "3591": {
      "op": "SWAP1"
    },
    "3592": {
      "op": "DUP7"
    },
    "3593": {
      "op": "DUP5"
    },
    "3594": {
      "op": "ADD"
    },
    "3595": {
      "op": "DUP6"
    },
    "3596": {
      "op": "JUMPDEST"
    },
    "3597": {
      "op": "DUP3"
    },
    "3598": {
      "op": "DUP2"
    },
    "3599": {
      "op": "LT"
    },
    "3600": {
      "op": "ISZERO"
    },
    "3601": {
      "op": "PUSH2",
      "value": "0xE46"
    },
    "3604": {
      "op": "JUMPI"
    },
    "3605": {
      "op": "DUP2"
    },
    "3606": {
      "op": "MLOAD"
    },
    "3607": {
      "op": "DUP1"
    },
    "3608": {
      "op": "MLOAD"
    },
    "3609": {
      "op": "DUP6"
    },
    "3610": {
      "op": "MSTORE"
    },
    "3611": {
      "op": "DUP7"
    },
    "3612": {
      "op": "DUP2"
    },
    "3613": {
      "op": "ADD"
    },
    "3614": {
      "op": "MLOAD"
    },
    "3615": {
      "op": "DUP8"
    },
    "3616": {
      "op": "DUP7"
    },
    "3617": {
      "op": "ADD"
    },
    "3618": {
      "op": "MSTORE"
    },
    "3619": {
      "op": "DUP6"
    },
    "3620": {
      "op": "DUP2"
    },
    "3621": {
      "op": "ADD"
    },
    "3622": {
      "op": "MLOAD"
    },
    "3623": {
      "op": "DUP7"
    },
    "3624": {
      "op": "DUP7"
    },
    "3625": {
      "op": "ADD"
    },
    "3626": {
      "op": "MSTORE"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3629": {
      "op": "SWAP1"
    },
    "3630": {
      "op": "DUP2"
    },
    "3631": {
      "op": "ADD"
    },
    "3632": {
      "op": "MLOAD"
    },
    "3633": {
      "op": "SWAP1"
    },
    "3634": {
      "op": "DUP6"
    },
    "3635": {
      "op": "ADD"
    },
    "3636": {
      "op": "MSTORE"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3639": {
      "op": "SWAP1"
    },
    "3640": {
      "op": "SWAP4"
    },
    "3641": {
      "op": "ADD"
    },
    "3642": {
      "op": "SWAP3"
    },
    "3643": {
      "op": "SWAP1"
    },
    "3644": {
      "op": "DUP6"
    },
    "3645": {
      "op": "ADD"
    },
    "3646": {
      "op": "SWAP1"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3649": {
      "op": "ADD"
    },
    "3650": {
      "op": "PUSH2",
      "value": "0xE0C"
    },
    "3653": {
      "op": "JUMP"
    },
    "3654": {
      "op": "JUMPDEST"
    },
    "3655": {
      "op": "POP"
    },
    "3656": {
      "op": "SWAP2"
    },
    "3657": {
      "op": "SWAP8"
    },
    "3658": {
      "op": "SWAP7"
    },
    "3659": {
      "op": "POP"
    },
    "3660": {
      "op": "POP"
    },
    "3661": {
      "op": "POP"
    },
    "3662": {
      "op": "POP"
    },
    "3663": {
      "op": "POP"
    },
    "3664": {
      "op": "POP"
    },
    "3665": {
      "op": "POP"
    },
    "3666": {
      "jump": "o",
      "op": "JUMP"
    },
    "3667": {
      "op": "JUMPDEST"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3670": {
      "op": "DUP1"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3673": {
      "op": "DUP4"
    },
    "3674": {
      "op": "DUP6"
    },
    "3675": {
      "op": "SUB"
    },
    "3676": {
      "op": "SLT"
    },
    "3677": {
      "op": "ISZERO"
    },
    "3678": {
      "op": "PUSH2",
      "value": "0xE66"
    },
    "3681": {
      "op": "JUMPI"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3684": {
      "op": "DUP1"
    },
    "3685": {
      "op": "REVERT"
    },
    "3686": {
      "op": "JUMPDEST"
    },
    "3687": {
      "op": "DUP3"
    },
    "3688": {
      "op": "CALLDATALOAD"
    },
    "3689": {
      "op": "PUSH2",
      "value": "0xE71"
    },
    "3692": {
      "op": "DUP2"
    },
    "3693": {
      "op": "PUSH2",
      "value": "0xD03"
    },
    "3696": {
      "jump": "i",
      "op": "JUMP"
    },
    "3697": {
      "op": "JUMPDEST"
    },
    "3698": {
      "op": "SWAP5"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3701": {
      "op": "SWAP4"
    },
    "3702": {
      "op": "SWAP1"
    },
    "3703": {
      "op": "SWAP4"
    },
    "3704": {
      "op": "ADD"
    },
    "3705": {
      "op": "CALLDATALOAD"
    },
    "3706": {
      "op": "SWAP4"
    },
    "3707": {
      "op": "POP"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "op": "POP"
    },
    "3710": {
      "jump": "o",
      "op": "JUMP"
    },
    "3711": {
      "op": "JUMPDEST"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3716": {
      "op": "DUP3"
    },
    "3717": {
      "op": "DUP5"
    },
    "3718": {
      "op": "SUB"
    },
    "3719": {
      "op": "SLT"
    },
    "3720": {
      "op": "ISZERO"
    },
    "3721": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "3724": {
      "op": "JUMPI"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3727": {
      "op": "DUP1"
    },
    "3728": {
      "op": "REVERT"
    },
    "3729": {
      "op": "JUMPDEST"
    },
    "3730": {
      "op": "DUP2"
    },
    "3731": {
      "op": "MLOAD"
    },
    "3732": {
      "op": "PUSH2",
      "value": "0xE9C"
    },
    "3735": {
      "op": "DUP2"
    },
    "3736": {
      "op": "PUSH2",
      "value": "0xD03"
    },
    "3739": {
      "jump": "i",
      "op": "JUMP"
    },
    "3740": {
      "op": "JUMPDEST"
    },
    "3741": {
      "op": "SWAP4"
    },
    "3742": {
      "op": "SWAP3"
    },
    "3743": {
      "op": "POP"
    },
    "3744": {
      "op": "POP"
    },
    "3745": {
      "op": "POP"
    },
    "3746": {
      "jump": "o",
      "op": "JUMP"
    },
    "3747": {
      "op": "JUMPDEST"
    },
    "3748": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3755": {
      "op": "SHL"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3758": {
      "op": "MSTORE"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3763": {
      "op": "MSTORE"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3768": {
      "op": "REVERT"
    },
    "3769": {
      "op": "JUMPDEST"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3772": {
      "op": "MLOAD"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3775": {
      "op": "DUP3"
    },
    "3776": {
      "op": "ADD"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3779": {
      "op": "NOT"
    },
    "3780": {
      "op": "AND"
    },
    "3781": {
      "op": "DUP2"
    },
    "3782": {
      "op": "ADD"
    },
    "3783": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3792": {
      "op": "DUP2"
    },
    "3793": {
      "op": "GT"
    },
    "3794": {
      "op": "DUP3"
    },
    "3795": {
      "op": "DUP3"
    },
    "3796": {
      "op": "LT"
    },
    "3797": {
      "op": "OR"
    },
    "3798": {
      "op": "ISZERO"
    },
    "3799": {
      "op": "PUSH2",
      "value": "0xEE2"
    },
    "3802": {
      "op": "JUMPI"
    },
    "3803": {
      "op": "PUSH2",
      "value": "0xEE2"
    },
    "3806": {
      "op": "PUSH2",
      "value": "0xEA3"
    },
    "3809": {
      "jump": "i",
      "op": "JUMP"
    },
    "3810": {
      "op": "JUMPDEST"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3813": {
      "op": "MSTORE"
    },
    "3814": {
      "op": "SWAP2"
    },
    "3815": {
      "op": "SWAP1"
    },
    "3816": {
      "op": "POP"
    },
    "3817": {
      "jump": "o",
      "op": "JUMP"
    },
    "3818": {
      "op": "JUMPDEST"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3823": {
      "op": "DUP3"
    },
    "3824": {
      "op": "DUP5"
    },
    "3825": {
      "op": "SUB"
    },
    "3826": {
      "op": "SLT"
    },
    "3827": {
      "op": "ISZERO"
    },
    "3828": {
      "op": "PUSH2",
      "value": "0xEFC"
    },
    "3831": {
      "op": "JUMPI"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3834": {
      "op": "DUP1"
    },
    "3835": {
      "op": "REVERT"
    },
    "3836": {
      "op": "JUMPDEST"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3839": {
      "op": "MLOAD"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3842": {
      "op": "DUP2"
    },
    "3843": {
      "op": "ADD"
    },
    "3844": {
      "op": "DUP2"
    },
    "3845": {
      "op": "DUP2"
    },
    "3846": {
      "op": "LT"
    },
    "3847": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3856": {
      "op": "DUP3"
    },
    "3857": {
      "op": "GT"
    },
    "3858": {
      "op": "OR"
    },
    "3859": {
      "op": "ISZERO"
    },
    "3860": {
      "op": "PUSH2",
      "value": "0xF1F"
    },
    "3863": {
      "op": "JUMPI"
    },
    "3864": {
      "op": "PUSH2",
      "value": "0xF1F"
    },
    "3867": {
      "op": "PUSH2",
      "value": "0xEA3"
    },
    "3870": {
      "jump": "i",
      "op": "JUMP"
    },
    "3871": {
      "op": "JUMPDEST"
    },
    "3872": {
      "op": "DUP1"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3875": {
      "op": "MSTORE"
    },
    "3876": {
      "op": "POP"
    },
    "3877": {
      "op": "DUP1"
    },
    "3878": {
      "op": "SWAP2"
    },
    "3879": {
      "op": "POP"
    },
    "3880": {
      "op": "DUP3"
    },
    "3881": {
      "op": "MLOAD"
    },
    "3882": {
      "op": "DUP2"
    },
    "3883": {
      "op": "MSTORE"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3886": {
      "op": "DUP4"
    },
    "3887": {
      "op": "ADD"
    },
    "3888": {
      "op": "MLOAD"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3891": {
      "op": "DUP3"
    },
    "3892": {
      "op": "ADD"
    },
    "3893": {
      "op": "MSTORE"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3896": {
      "op": "DUP4"
    },
    "3897": {
      "op": "ADD"
    },
    "3898": {
      "op": "MLOAD"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3901": {
      "op": "DUP3"
    },
    "3902": {
      "op": "ADD"
    },
    "3903": {
      "op": "MSTORE"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3906": {
      "op": "DUP4"
    },
    "3907": {
      "op": "ADD"
    },
    "3908": {
      "op": "MLOAD"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3911": {
      "op": "DUP3"
    },
    "3912": {
      "op": "ADD"
    },
    "3913": {
      "op": "MSTORE"
    },
    "3914": {
      "op": "POP"
    },
    "3915": {
      "op": "SWAP3"
    },
    "3916": {
      "op": "SWAP2"
    },
    "3917": {
      "op": "POP"
    },
    "3918": {
      "op": "POP"
    },
    "3919": {
      "jump": "o",
      "op": "JUMP"
    },
    "3920": {
      "op": "JUMPDEST"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3925": {
      "op": "DUP1"
    },
    "3926": {
      "op": "DUP4"
    },
    "3927": {
      "op": "DUP6"
    },
    "3928": {
      "op": "SUB"
    },
    "3929": {
      "op": "SLT"
    },
    "3930": {
      "op": "ISZERO"
    },
    "3931": {
      "op": "PUSH2",
      "value": "0xF63"
    },
    "3934": {
      "op": "JUMPI"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3937": {
      "op": "DUP1"
    },
    "3938": {
      "op": "REVERT"
    },
    "3939": {
      "op": "JUMPDEST"
    },
    "3940": {
      "op": "DUP3"
    },
    "3941": {
      "op": "MLOAD"
    },
    "3942": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3951": {
      "op": "DUP1"
    },
    "3952": {
      "op": "DUP3"
    },
    "3953": {
      "op": "GT"
    },
    "3954": {
      "op": "ISZERO"
    },
    "3955": {
      "op": "PUSH2",
      "value": "0xF7B"
    },
    "3958": {
      "op": "JUMPI"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3961": {
      "op": "DUP1"
    },
    "3962": {
      "op": "REVERT"
    },
    "3963": {
      "op": "JUMPDEST"
    },
    "3964": {
      "op": "DUP2"
    },
    "3965": {
      "op": "DUP6"
    },
    "3966": {
      "op": "ADD"
    },
    "3967": {
      "op": "SWAP2"
    },
    "3968": {
      "op": "POP"
    },
    "3969": {
      "op": "DUP6"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3972": {
      "op": "DUP4"
    },
    "3973": {
      "op": "ADD"
    },
    "3974": {
      "op": "SLT"
    },
    "3975": {
      "op": "PUSH2",
      "value": "0xF8F"
    },
    "3978": {
      "op": "JUMPI"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3981": {
      "op": "DUP1"
    },
    "3982": {
      "op": "REVERT"
    },
    "3983": {
      "op": "JUMPDEST"
    },
    "3984": {
      "op": "DUP2"
    },
    "3985": {
      "op": "MLOAD"
    },
    "3986": {
      "op": "DUP2"
    },
    "3987": {
      "op": "DUP2"
    },
    "3988": {
      "op": "GT"
    },
    "3989": {
      "op": "ISZERO"
    },
    "3990": {
      "op": "PUSH2",
      "value": "0xFA1"
    },
    "3993": {
      "op": "JUMPI"
    },
    "3994": {
      "op": "PUSH2",
      "value": "0xFA1"
    },
    "3997": {
      "op": "PUSH2",
      "value": "0xEA3"
    },
    "4000": {
      "jump": "i",
      "op": "JUMP"
    },
    "4001": {
      "op": "JUMPDEST"
    },
    "4002": {
      "op": "PUSH2",
      "value": "0xFAF"
    },
    "4005": {
      "op": "DUP5"
    },
    "4006": {
      "op": "DUP3"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4009": {
      "op": "SHL"
    },
    "4010": {
      "op": "ADD"
    },
    "4011": {
      "op": "PUSH2",
      "value": "0xEB9"
    },
    "4014": {
      "jump": "i",
      "op": "JUMP"
    },
    "4015": {
      "op": "JUMPDEST"
    },
    "4016": {
      "op": "DUP2"
    },
    "4017": {
      "op": "DUP2"
    },
    "4018": {
      "op": "MSTORE"
    },
    "4019": {
      "op": "DUP5"
    },
    "4020": {
      "op": "DUP2"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "SWAP3"
    },
    "4023": {
      "op": "POP"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "4026": {
      "op": "SWAP2"
    },
    "4027": {
      "op": "SWAP1"
    },
    "4028": {
      "op": "SWAP2"
    },
    "4029": {
      "op": "SHL"
    },
    "4030": {
      "op": "DUP4"
    },
    "4031": {
      "op": "ADD"
    },
    "4032": {
      "op": "DUP5"
    },
    "4033": {
      "op": "ADD"
    },
    "4034": {
      "op": "SWAP1"
    },
    "4035": {
      "op": "DUP8"
    },
    "4036": {
      "op": "DUP3"
    },
    "4037": {
      "op": "GT"
    },
    "4038": {
      "op": "ISZERO"
    },
    "4039": {
      "op": "PUSH2",
      "value": "0xFCF"
    },
    "4042": {
      "op": "JUMPI"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4045": {
      "op": "DUP1"
    },
    "4046": {
      "op": "REVERT"
    },
    "4047": {
      "op": "JUMPDEST"
    },
    "4048": {
      "op": "SWAP3"
    },
    "4049": {
      "op": "DUP5"
    },
    "4050": {
      "op": "ADD"
    },
    "4051": {
      "op": "SWAP3"
    },
    "4052": {
      "op": "JUMPDEST"
    },
    "4053": {
      "op": "DUP2"
    },
    "4054": {
      "op": "DUP5"
    },
    "4055": {
      "op": "LT"
    },
    "4056": {
      "op": "ISZERO"
    },
    "4057": {
      "op": "PUSH2",
      "value": "0xFF8"
    },
    "4060": {
      "op": "JUMPI"
    },
    "4061": {
      "op": "PUSH2",
      "value": "0xFE6"
    },
    "4064": {
      "op": "DUP9"
    },
    "4065": {
      "op": "DUP6"
    },
    "4066": {
      "op": "PUSH2",
      "value": "0xEEA"
    },
    "4069": {
      "jump": "i",
      "op": "JUMP"
    },
    "4070": {
      "op": "JUMPDEST"
    },
    "4071": {
      "op": "DUP4"
    },
    "4072": {
      "op": "MSTORE"
    },
    "4073": {
      "op": "DUP5"
    },
    "4074": {
      "op": "DUP4"
    },
    "4075": {
      "op": "ADD"
    },
    "4076": {
      "op": "SWAP3"
    },
    "4077": {
      "op": "POP"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4080": {
      "op": "DUP5"
    },
    "4081": {
      "op": "ADD"
    },
    "4082": {
      "op": "SWAP4"
    },
    "4083": {
      "op": "POP"
    },
    "4084": {
      "op": "PUSH2",
      "value": "0xFD4"
    },
    "4087": {
      "op": "JUMP"
    },
    "4088": {
      "op": "JUMPDEST"
    },
    "4089": {
      "op": "SWAP8"
    },
    "4090": {
      "op": "SWAP7"
    },
    "4091": {
      "op": "POP"
    },
    "4092": {
      "op": "POP"
    },
    "4093": {
      "op": "POP"
    },
    "4094": {
      "op": "POP"
    },
    "4095": {
      "op": "POP"
    },
    "4096": {
      "op": "POP"
    },
    "4097": {
      "op": "POP"
    },
    "4098": {
      "jump": "o",
      "op": "JUMP"
    },
    "4099": {
      "op": "JUMPDEST"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4102": {
      "op": "DUP1"
    },
    "4103": {
      "op": "DUP3"
    },
    "4104": {
      "op": "MSTORE"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4107": {
      "op": "SWAP1"
    },
    "4108": {
      "op": "DUP3"
    },
    "4109": {
      "op": "ADD"
    },
    "4110": {
      "op": "MSTORE"
    },
    "4111": {
      "op": "PUSH32",
      "value": "0x526F757465723A636F6C6C656374696F6E206D61726B6574206E6F7420657869"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4146": {
      "op": "DUP3"
    },
    "4147": {
      "op": "ADD"
    },
    "4148": {
      "op": "MSTORE"
    },
    "4149": {
      "op": "PUSH2",
      "value": "0x1CDD"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "4154": {
      "op": "SHL"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4157": {
      "op": "DUP3"
    },
    "4158": {
      "op": "ADD"
    },
    "4159": {
      "op": "MSTORE"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4162": {
      "op": "ADD"
    },
    "4163": {
      "op": "SWAP1"
    },
    "4164": {
      "jump": "o",
      "op": "JUMP"
    },
    "4165": {
      "op": "JUMPDEST"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4170": {
      "op": "DUP3"
    },
    "4171": {
      "op": "DUP5"
    },
    "4172": {
      "op": "SUB"
    },
    "4173": {
      "op": "SLT"
    },
    "4174": {
      "op": "ISZERO"
    },
    "4175": {
      "op": "PUSH2",
      "value": "0x1057"
    },
    "4178": {
      "op": "JUMPI"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4181": {
      "op": "DUP1"
    },
    "4182": {
      "op": "REVERT"
    },
    "4183": {
      "op": "JUMPDEST"
    },
    "4184": {
      "op": "PUSH2",
      "value": "0xE9C"
    },
    "4187": {
      "op": "DUP4"
    },
    "4188": {
      "op": "DUP4"
    },
    "4189": {
      "op": "PUSH2",
      "value": "0xEEA"
    },
    "4192": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "284fc88d0668e19911771a52f17b1c4949983379",
  "source": "// contracts/NftMarketRouter.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@oz-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"./NftMarket.sol\";\nimport \"./NftMarketFactory.sol\";\n\ncontract NftMarketRouter is IERC721ReceiverUpgradeable {\n    address public immutable factory;\n\n    constructor(address _factory) {\n        factory = _factory;\n    }\n\n    event SellNft(address _collection, uint256 _tokenId, address seller, uint256 _price);\n    event PriceChange(address _collection, uint256 _tokenId, address seller, uint256 _newPrice);\n    event Cancel(address _collection, uint256 _tokenId, address seller);\n    event BuyNft(address _collection, uint256 _tokenId, address seller, address buyer, uint256 _price);\n\n    function sellItem(\n        address _collection,\n        uint256 _tokenId,\n        uint256 _price\n    ) external {\n        require(_price > 0, \"Router:price wrong\");\n        address _pair = NftMarketFactory(factory).getPair(_collection);\n        require(_pair != address(0), \"Router:collection market not exist\");\n        IERC721(_collection).safeTransferFrom(msg.sender, address(this), _tokenId);\n        IERC721(_collection).transferFrom(address(this), _pair, _tokenId);\n        NftMarket(_pair).sellItemByRouter(msg.sender, _tokenId, _price);\n        emit SellNft(_collection, _tokenId, msg.sender, _price);\n    }\n\n    function buyItem(address _collection, uint256 _tokenId) external payable {\n        address _pair = NftMarketFactory(factory).getPair(_collection);\n        require(_pair != address(0), \"Router:collection market not exist\");\n        NftMarket nftMarket = NftMarket(_pair);\n\n        require(nftMarket.getOrder(_tokenId).price == msg.value, \"Router: value is wrong\");\n        address seller = nftMarket.buyItemByRouter{value: msg.value}(msg.sender, _tokenId);\n        emit BuyNft(_collection, _tokenId, seller, msg.sender, msg.value);\n    }\n\n    function cancelItem(address _collection, uint256 _tokenId) external {\n        address _pair = NftMarketFactory(factory).getPair(_collection);\n        require(_pair != address(0), \"Router:collection market not exist\");\n        NftMarket nftMarket = NftMarket(_pair);\n        require(nftMarket.getOwner(_tokenId) == msg.sender, \"Router:not owner\");\n        nftMarket.cancelItemByRouter(_tokenId);\n        emit Cancel(_collection, _tokenId, msg.sender);\n    }\n\n    function changePrice(\n        address _collection,\n        uint256 _tokenId,\n        uint256 _price\n    ) external {\n        require(_price > 0, \"Router:price wrong\");\n        address _pair = NftMarketFactory(factory).getPair(_collection);\n        require(_pair != address(0), \"Router:collection market not exist\");\n        NftMarket nftMarket = NftMarket(_pair);\n        require(nftMarket.getOwner(_tokenId) == msg.sender, \"Router:not owner\");\n        nftMarket.changePriceByRouter(_tokenId, _price);\n        emit PriceChange(_collection, _tokenId, msg.sender, _price);\n    }\n\n    function getOrderPage(\n        address _collection,\n        uint256 pageIdx,\n        uint256 pageSize\n    ) public view returns (NftMarket.TokenMeta[] memory) {\n        address _pair = NftMarketFactory(factory).getPair(_collection);\n        NftMarket nftMarket = NftMarket(_pair);\n        return nftMarket.getOrderPage(pageIdx, pageSize);\n    }\n\n    function bulkGetOrders(\n        address _collection,\n        uint256 startIdx,\n        uint256 endIdx\n    ) public view returns (NftMarket.TokenMeta[] memory ret) {\n        address _pair = NftMarketFactory(factory).getPair(_collection);\n        NftMarket nftMarket = NftMarket(_pair);\n        return nftMarket.bulkGetOrders(startIdx, endIdx);\n    }\n\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n",
  "sourceMap": "279:3650:25:-:0;;;379:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;419:18:25;;;279:3650;;14:290:29;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:29;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:29:o;:::-;279:3650:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/NftMarketRouter.sol",
  "type": "contract"
}